<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4026.11">
  <POU Name="TmsEmbarkStation" Id="{4d15a973-29cb-4ffe-934a-8f072d992ec0}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK TmsEmbarkStation EXTENDS Station IMPLEMENTS ITF_SwitchStation
VAR
	DepartMover : ITF_XtsMoverAxis;
	SwitchAxis : MC2_Axis_Base;
	_switchUpperPosition : MC_LREAL;
	_switchLowerPosition : MC_LREAL;
	ExecuteSequence : BOOL;
	_TrackLevel : INT := 1; //1 is low, 2 is high
	State :(
		Init,                                               
		Ready,                                 
        Waiting,
		HasSwitch,
		Call,
		FindTarget,
		Boarding,
		BoardingComplete,
		ActivateTrackForMover,
		Moving,
		Done,
		Aborting); 
	_switchPosition: MC_LREAL;
	arrTrackIds : ARRAY[1..SystemParameters.NumberOfTracks] OF I_XtsTrack;
	isUpAllowed : BOOL := TRUE;
	isDownAllowed : BOOL := FALSE;
	isMiddleAllowed : BOOL := TRUE;
	_BoardVelocity : MC_LREAL;
	_SwitchVelocity : MC_LREAL;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[{analysis -2}]]></ST>
    </Implementation>
    <Property Name="BoardVelocity" Id="{af5577ef-90f6-4070-9e3d-dce62d068c94}">
      <Declaration><![CDATA[PROPERTY BoardVelocity : MC_LREAL]]></Declaration>
      <Get Name="Get" Id="{442f20d9-4d5c-462e-ace0-37721614361e}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[BoardVelocity := _BoardVelocity;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{4f476cb8-1c36-46ee-b33f-8098bec190be}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[_BoardVelocity := BoardVelocity;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Method Name="Cycle" Id="{30dc7518-cfa1-45c8-85d7-d03d0ef4ae28}">
      <Declaration><![CDATA[METHOD PUBLIC  Cycle : HRESULT
VAR
	ActivateTrackResult : BOOL;
	BoardMoverResult : HRESULT;
	BaseCallResult : HRESULT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Cycle := S_OK;
CASE State OF
	Init:
		_Operating := _Empty := _Complete := _Ready := _HasMover := FALSE;
		StationMovers := 0;
		State := Ready;
	
	Ready:	
		IF ExecuteSequence THEN
			_Operating := _Complete := _HasMover := FALSE;
			_Empty := _Ready := TRUE;
			StationMovers := 0;
			State := Waiting;
		END_IF
	
	Waiting:
		IF _HasMover THEN
			State := HasSwitch;
			_Operating := TRUE;
			_Empty := FALSE;
			_Ready := FALSE;
			_Complete := FALSE;
		END_IF
	
	HasSwitch:
		IF (_TrackLevel = 1 AND (SwitchAxis.isAtPosition(_switchLowerPosition) ))
			OR (_TrackLevel = 2 AND (SwitchAxis.isAtPosition(_switchUpperPosition))) THEN
					State := Boarding;
		ELSE
			State := Call;
		END_IF	
		
	Call:
		IF SwitchAxis.IsStationary() THEN
			IF _TrackLevel = 1 THEN
				SwitchAxis.MoveToPosition(Position := _switchLowerPosition, Velocity := _SwitchVelocity);
			ELSE
				SwitchAxis.MoveToPosition(Position := _switchUpperPosition, Velocity := _SwitchVelocity);
			END_IF
		ELSE
			State := Waiting;
		END_IF
			
	Boarding:
		BoardMoverResult := DepartMover.MoveTo(RequiredPosition := _switchPosition, MoveVelocity := _BoardVelocity, NonModuloMove := TRUE);
		IF DepartMover.isMoverAtPosition(position := _switchPosition) THEN
			State := BoardingComplete;
		END_IF
		
	BoardingComplete:
		IF _TrackLevel = 1 THEN
			SwitchAxis.MoveToPosition(Position := _switchUpperPosition, Velocity := _SwitchVelocity);
		ELSE
			SwitchAxis.MoveToPosition(Position := _switchLowerPosition, Velocity := _SwitchVelocity);
		END_IF
		State := BoardingComplete;
		
	Moving:
		IF (_TrackLevel = 1 AND SwitchAxis.isAtPosition(position := _switchUpperPosition)) OR
			(_TrackLevel = 2 AND SwitchAxis.isAtPosition(position := _switchLowerPosition)) THEN
			State := ActivateTrackForMover;
		END_IF
		
	ActivateTrackForMover:
		IF _TrackLevel = 1 THEN
			DepartMover.ActivateTrack(NewTrack := arrTrackIds[2].MyOTCID, Track := arrTrackIds[2]);
		ELSE
			DepartMover.ActivateTrack(NewTrack := arrTrackIds[1].MyOTCID, Track := arrTrackIds[1]);
		END_IF
		State := Moving;
		_Complete := TRUE;
			
	Done:
		IF _Complete AND NOT _HasMover THEN
			_Operating := FALSE;
			_Empty := TRUE;
			_Ready := TRUE;
			State := Waiting;
		END_IF	

	Aborting:
		State := Ready;	
		DepartMover := 0;
	ELSE
		Cycle := E_FAIL;
END_CASE
BaseCallResult := SUPER^.Cycle();
SwitchAxis.Cycle();]]></ST>
      </Implementation>
    </Method>
    <Method Name="HasMover" Id="{466b4750-cbf0-42df-80f2-b3d4852756ba}">
      <Declaration><![CDATA[METHOD HasMover : BOOL
VAR_INPUT
	mover : ITF_XtsMoverAxis;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF StationMovers <= 2 THEN
	StationMovers := StationMovers + 1;
	DepartMover := mover;
	_HasMover := TRUE;
END_IF
HasMover := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="MoverAway" Id="{45498adf-6827-4a97-8c80-ff53aebb1724}">
      <Declaration><![CDATA[METHOD PUBLIC MoverAway : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[StationMovers := StationMovers - 1;
IF StationMovers = 0 THEN
	_HasMover := FALSE;
END_IF
DepartMover := 0;
MoverAway := TRUE;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="StartSwitch" Id="{c29e9395-8979-4e9a-90a8-1d97909d0ac9}">
      <Declaration><![CDATA[METHOD StartSwitch : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[ExecuteSequence := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="StopSwitch" Id="{3cacf78b-01e4-4c36-b301-1826803c65db}">
      <Declaration><![CDATA[METHOD StopSwitch : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[ExecuteSequence := FALSE;
State := Aborting;]]></ST>
      </Implementation>
    </Method>
    <Property Name="SwitchLowerPosition" Id="{190ee51d-8616-4771-bea0-4a043a7d3d59}">
      <Declaration><![CDATA[PROPERTY SwitchLowerPosition : MC_LREAL]]></Declaration>
      <Get Name="Get" Id="{2179123a-03ea-4eb3-8d32-50c09c60e6da}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{98459ca6-5c5e-4646-8d93-b28fde23c27f}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Method Name="SwitchMoveComplete" Id="{a8eedfd9-7707-47a4-b55d-1e335fa7f41f}">
      <Declaration><![CDATA[METHOD PUBLIC SwitchMoveComplete : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[_Complete := TRUE;
SwitchMoveComplete := true;]]></ST>
      </Implementation>
    </Method>
    <Property Name="SwitchTravelPosition" Id="{506615ae-e584-4b6b-8c90-23702c945ca0}">
      <Declaration><![CDATA[PROPERTY SwitchTravelPosition : mc_lreal
]]></Declaration>
      <Get Name="Get" Id="{770e482e-e926-4e26-8349-fb06dc2d74be}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[SwitchTravelPosition := _switchPosition;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{2f71d79c-8b57-4fda-9b2a-e631ae1faffd}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[_switchPosition := SwitchTravelPosition;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Property Name="SwitchUpperPosition" Id="{5e471955-b1fa-42e8-8457-954969d80adc}">
      <Declaration><![CDATA[PROPERTY SwitchUpperPosition : MC_LREAL]]></Declaration>
      <Get Name="Get" Id="{6218b073-eaf9-44e9-8692-abdac10dd02b}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{5e38ec9d-d9b7-4541-b1f9-c48e79167e2a}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Property Name="TrackIds" Id="{061f1ace-88f0-4461-91e3-203af1d3961d}">
      <Declaration><![CDATA[PROPERTY TrackIds : array[1..SystemParameters.NumberOfTracks] of I_XtsTrack]]></Declaration>
      <Get Name="Get" Id="{eb5d1a17-a69b-486a-bd32-b1fce0797a7b}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[TrackIds := arrTrackIds;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{f6abe2e3-3d9c-4b6c-81bd-f3b0563c7882}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[arrTrackIds := TrackIds;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Property Name="TrackLevel" Id="{3cbcc021-27ff-4251-b3d2-761cf34c192e}">
      <Declaration><![CDATA[PROPERTY TrackLevel : INT
]]></Declaration>
      <Get Name="Get" Id="{eac07d3d-cc95-4d94-be8d-aab0ced9fdea}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[TrackLevel := _TrackLevel;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{4b1478e4-977e-454a-a0bf-fe888f795dfb}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[_TrackLevel := TrackLevel;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <LineIds Name="TmsEmbarkStation">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="TmsEmbarkStation.BoardVelocity.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="TmsEmbarkStation.BoardVelocity.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="TmsEmbarkStation.Cycle">
      <LineId Id="3" Count="13" />
      <LineId Id="20" Count="8" />
      <LineId Id="32" Count="7" />
      <LineId Id="43" Count="10" />
      <LineId Id="57" Count="5" />
      <LineId Id="66" Count="7" />
      <LineId Id="77" Count="5" />
      <LineId Id="86" Count="8" />
      <LineId Id="98" Count="7" />
      <LineId Id="109" Count="7" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="TmsEmbarkStation.HasMover">
      <LineId Id="3" Count="4" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="TmsEmbarkStation.MoverAway">
      <LineId Id="3" Count="5" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="TmsEmbarkStation.StartSwitch">
      <LineId Id="1" Count="0" />
    </LineIds>
    <LineIds Name="TmsEmbarkStation.StopSwitch">
      <LineId Id="1" Count="1" />
    </LineIds>
    <LineIds Name="TmsEmbarkStation.SwitchLowerPosition.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="TmsEmbarkStation.SwitchLowerPosition.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="TmsEmbarkStation.SwitchMoveComplete">
      <LineId Id="3" Count="0" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="TmsEmbarkStation.SwitchTravelPosition.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="TmsEmbarkStation.SwitchTravelPosition.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="TmsEmbarkStation.SwitchUpperPosition.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="TmsEmbarkStation.SwitchUpperPosition.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="TmsEmbarkStation.TrackIds.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="TmsEmbarkStation.TrackIds.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="TmsEmbarkStation.TrackLevel.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="TmsEmbarkStation.TrackLevel.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>