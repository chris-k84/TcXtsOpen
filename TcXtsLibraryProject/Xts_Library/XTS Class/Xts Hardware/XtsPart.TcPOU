<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.13">
  <POU Name="XtsPart" Id="{39541d00-22ec-4750-829d-4864a624597e}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK XtsPart EXTENDS CyclicBase
VAR
	_MyInterface : Tc3_XTS_Utility.I_TcIoXtsXpuPart;
	XtsIoEnvInitialiseState : INT;
	MyModuleCount : UDINT;
	PartDriveState: Tc3_XTS_Utility.DriveState;
	_ReadyToEnable: BOOL;
	MyModules : ARRAY[0..SystemParameters.MaxModulesInPart] OF XtsMotorModule;
	ModuleIndex: UDINT := 1;
	InSim : BOOL;
	i : UINT;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="Cycle" Id="{6aa26807-846b-4168-ab87-fb4c66b138eb}">
      <Declaration><![CDATA[METHOD PUBLIC  Cycle : HRESULT
VAR_INPUT
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[PartDriveState := _MyInterface.GetDriveState();

CASE PartDriveState OF
	DriveState.Unknown:
		_ReadyToEnable := FALSE;

	DriveState.FaultReactionActive:
		_ReadyToEnable := FALSE;

	DriveState.Fault:
		_ReadyToEnable := FALSE;

	DriveState.NotReadyToSwitchOn:
		_ReadyToEnable := FALSE;

	DriveState.SwitchOnDisabled:
		_ReadyToEnable := FALSE;

	DriveState.ReadyToSwitchOn:
		_ReadyToEnable := TRUE;

	DriveState.SwitchedOn:
		_ReadyToEnable := TRUE;

	DriveState.OperationEnabled:
		_ReadyToEnable := TRUE;

ELSE
	_ReadyToEnable := FALSE;
END_CASE

FOR i := 0 TO (UDINT_TO_UINT(MyModuleCount) - 1) DO
	MyModules[i].Cycle();
END_FOR]]></ST>
      </Implementation>
    </Method>
    <Method Name="Initialise" Id="{f7bcb601-a320-4f3f-bcf3-5ec4e45a7245}">
      <Declaration><![CDATA[METHOD Initialise : HRESULT
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[CASE XtsIoEnvInitialiseState OF
	0:
		IF _MyInterface <> 0 THEN
			XtsIoEnvInitialiseState := 1;
		ELSE
			XtsIoEnvInitialiseState := 999;
		END_IF
	1:
		MyModuleCount := _MyInterface.GetModuleCount();
		IF InSim THEN
			XtsIoEnvInitialiseState := 3;
			FOR i := 0 TO UDINT_TO_UINT(MyModuleCount - 1) DO
				MyModules[i].SetInSim();
			END_FOR
			InSim := true;
		ELSE
			FOR i := 0 TO UDINT_TO_UINT(MyModuleCount - 1) DO
				MyModules[i].MyCoEInterface := _MyInterface.ModuleCoE(i + 1);
				MyModules[i].MyModuleInterface := _MyInterface.ModuleTcIo(i + 1);
			END_FOR
			XtsIoEnvInitialiseState := 2;
		END_IF
		
	2:
		XtsIoEnvInitialiseState := 3;
		FOR i := 0 TO UDINT_TO_UINT(MyModuleCount-1) DO
			IF MyModules[i].Initialise() <> 2 THEN
				XtsIoEnvInitialiseState := 2;
			END_IF
		END_FOR
	3:
		Initialise := 2;

END_CASE]]></ST>
      </Implementation>
    </Method>
    <Method Name="Is24VBusOK" Id="{d79d6eda-1f90-4384-9dda-ac7f4aaa7f07}">
      <Declaration><![CDATA[METHOD Is24VBusOK : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Is24VBusOK := TRUE;
FOR i := 0 TO (UDINT_TO_UINT(MyModuleCount) - 1) DO
	IF MyModules[i].Is24VOK() = 1 THEN
		Is24VBusOK := FALSE;
	END_IF
END_FOR]]></ST>
      </Implementation>
    </Method>
    <Method Name="Is48VBusOK" Id="{44113d88-367f-494b-87cf-4655fd94d258}">
      <Declaration><![CDATA[METHOD Is48VBusOK : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Is48VBusOK := TRUE;
FOR i := 0 TO (UDINT_TO_UINT(MyModuleCount) - 1) DO
	IF MyModules[i].Is48VOK() = 1 THEN
		Is48VBusOK := FALSE;
	END_IF
END_FOR]]></ST>
      </Implementation>
    </Method>
    <Property Name="MyXtsIoEnvInterface" Id="{b5f6c838-c909-4a11-9656-9e449699aee4}">
      <Declaration><![CDATA[PROPERTY MyXtsIoEnvInterface : I_TcIoXtsXpuPart]]></Declaration>
      <Get Name="Get" Id="{249dae7e-fa2b-4c2d-a421-a33d92e9b50d}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[MyXtsIoEnvInterface := _MyInterface;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{436f8d77-48c4-4edc-81e4-5821f3038a93}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[_MyInterface := MyXtsIoEnvInterface;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Method Name="ResetPart" Id="{a2c1bf74-a00f-4e37-abd0-e53201644a52}">
      <Declaration><![CDATA[METHOD ResetPart : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[ResetPart := _MyInterface.TriggerReset();]]></ST>
      </Implementation>
    </Method>
    <Method Name="SetInSim" Id="{273102d0-bbf8-41a5-af45-2632119808d5}">
      <Declaration><![CDATA[METHOD SetInSim : HRESULT
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[InSim := true;]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>