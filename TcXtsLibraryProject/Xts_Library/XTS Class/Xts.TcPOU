<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4026.11">
  <POU Name="Xts" Id="{4538c683-94fc-49a1-b5ad-30ffec5e4eff}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK Xts IMPLEMENTS ICyclic, I_Initialise
VAR
	_homePosition : MC_LREAL;
	_HomeSpeed : MC_LREAL;
	_XtsEnabled : BOOL;
	XtsIoEnvVar : XTSIOEnvVarWrapper;
	mcCollisionGroup : CollisionGroup;
	XtsHardware : XTSHardware_V2 := (XtsIoEnvVarWrapper := XtsIoEnvVar);
	XtsHwState : XtsSystemInitialisation;
	EnableSequence : XtsEnableSequence(mcCollisionGroup);
	DisableSequence : XtsDisableSequence(mcCollisionGroup);
	State : UINT;	
	i : UINT;
	AtHome: BOOL;
	_tracks : UINT;
	_MoverArray : ARRAY[1..SystemParameters.NumberOfMovers] OF I_XtsMoverAxis;
	EnabledTrigger : R_TRIG;
	DisabledTrigger : R_TRIG;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[{analysis -2}]]></ST>
    </Implementation>
    <Folder Name="Operations" Id="{0e8598c4-3d58-4c14-a12f-6fd3f3ea02bf}" />
    <Method Name="ActivateTracksInMovers" Id="{682f2d4e-bf73-44bf-93e3-716a6d45755c}" FolderPath="Operations\">
      <Declaration><![CDATA[METHOD PUBLIC ActivateTracksInMovers : BOOL
VAR
	ActivateTrackResult : BOOL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FOR i := 1 TO SystemParameters.NumberOfMovers DO
	_MoverArray[i].ActivateTrack(newTrack := _MoverArray[i].MoversActiveTrack,
									Track := XtsHardware.GetTrackByOTCID(trackOTCID := _MoverArray[i].MoversActiveTrack));
END_FOR
ActivateTracksInMovers := true;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Cycle" Id="{da42838e-fb00-40a5-96f4-b787aa883566}">
      <Declaration><![CDATA[METHOD PUBLIC Cycle : HRESULT
VAR
	EnableResult : HRESULT;
	DisableResult : HRESULT;
	GrpStopResult : HRESULT;
	CollisionResult : HRESULT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[EnableResult := EnableSequence.Cycle();
DisableResult := DisableSequence.Cycle();
CollisionResult := mcCollisionGroup.Cycle();
EnabledTrigger(CLK := EnableSequence.Done);
DisabledTrigger(CLK := DisableSequence.Done);
XtsHardware.Cycle();
IF EnabledTrigger.Q THEN
	_XtsEnabled := TRUE;
END_IF
IF DisabledTrigger.Q THEN
	_XtsEnabled := false;
END_IF
IF EnableResult = E_FAIL OR
	DisableResult = E_FAIL OR
	GrpStopResult = E_FAIL OR
	CollisionResult = E_FAIL THEN
	Cycle := E_FAIL;
END_IF
]]></ST>
      </Implementation>
    </Method>
    <Method Name="DisableXTS" Id="{e2a85e5a-c7bf-481d-be4f-81acebc29fb7}" FolderPath="Operations\">
      <Declaration><![CDATA[METHOD DisableXTS : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[DisableXTS := DisableSequence.Disable();]]></ST>
      </Implementation>
    </Method>
    <Method Name="EnableXTS" Id="{e800781e-1435-4747-9cb4-9b9fab34ca22}" FolderPath="Operations\">
      <Declaration><![CDATA[METHOD EnableXTS : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[EnableSequence.Enable();]]></ST>
      </Implementation>
    </Method>
    <Method Name="GetTMSMoverInterface" Id="{0e64eced-3444-47ea-9660-c818e7a9dea9}" FolderPath="Operations\">
      <Declaration><![CDATA[METHOD PUBLIC GetTMSMoverInterface : BOOL
VAR_INPUT
END_VAR
VAR
	//TmsMoverInterface : ITmsMover;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[//FOR i := 1 TO SystemParameters.NumberOfMovers DO
//	IF __QUERYINTERFACE(_MoverArray[i],TmsMoverInterface) THEN
//		TmsMoverInterface.SetMoverInterface(MoverInterface := _XtsTrackHardware.GetMoverEnvInterface(i));
//	END_IF
//END_FOR
FOR i := 1 TO SystemParameters.NumberOfMovers DO
	_MoverArray[i].MoverXtsIoEnvInterface := XtsIoEnvVar.GetMoverInterface(i);
END_FOR]]></ST>
      </Implementation>
    </Method>
    <Method Name="GetTrackByOCTID" Id="{1d75e1be-3c32-4213-9fda-cb384fa7a069}" FolderPath="Operations\">
      <Declaration><![CDATA[METHOD GetTrackByOCTID : I_XtsTrack
VAR_INPUT
	TrackId : OTCID;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[GetTrackByOCTID := XtsHardware.GetTrackByOTCID(trackOTCID := TrackId);]]></ST>
      </Implementation>
    </Method>
    <Property Name="HomePosition" Id="{7488af26-181d-46aa-9621-c1c9bb1f6cd2}">
      <Declaration><![CDATA[PROPERTY PUBLIC HomePosition : mc_lreal]]></Declaration>
      <Get Name="Get" Id="{204400f9-e0e2-4b38-927a-449ec513969c}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[HomePosition := _homePosition;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{21b02a35-3878-4951-a8db-c2a9a5cebc6f}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[_homePosition := HomePosition;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Property Name="HomeSpeed" Id="{1d1b8038-88e9-4101-981d-99bed1ba5b18}">
      <Declaration><![CDATA[PROPERTY HomeSpeed : mc_lreal]]></Declaration>
      <Get Name="Get" Id="{0a3ad8ef-2031-4e74-8b6e-8a654900fd7a}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[HomeSpeed := _HomeSpeed;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{ddb9be5e-d4fd-4d3d-a099-37476a9afab3}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[_HomeSpeed := HomeSpeed;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Method Name="Initialise" Id="{3c52ae7d-89c5-4979-a1bd-5023a279947c}">
      <Declaration><![CDATA[METHOD Initialise : HRESULT
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[CASE XtsHwState OF
	XtsSystemInitialisation.Init:
		IF XtsIoEnvVar.Initialise() THEN
			XtsHwState := XtsSystemInitialisation.PassGroupReference;
		END_IF
		
	XtsSystemInitialisation.PassGroupReference:
		mcCollisionGroup.CAGroupXtsIoEnvInterface := XtsIoEnvVar.GetCaGroupInterface(1);
		XtsHwState := XtsSystemInitialisation.InitialiseHardware;
	
	XtsSystemInitialisation.InitialiseHardware:
		IF XtsHardware.Initialise() = 2 THEN
			XtsHwState := XtsSystemInitialisation.SetDetection;
		END_IF
	
	XtsSystemInitialisation.SetDetection:
		IF XtsHardware.SetTracksForDetection() THEN
			XtsHwState := XtsSystemInitialisation.Redetect;
		END_IF
		
	XtsSystemInitialisation.Redetect:
		IF XtsHardware.TriggerMoverDetection() THEN
			XtsHwState := XtsSystemInitialisation.MoversValid;
		END_IF
		
	XtsSystemInitialisation.MoversValid:
		IF XtsHardware.getAllMoversValid() THEN
			XtsHwState := XtsSystemInitialisation.AllMoversFound;
		END_IF
	
	XtsSystemInitialisation.AllMoversFound:
		IF XtsHardware.getMoversDetected() THEN
			XtsHwState := XtsSystemInitialisation.XTSMode;
		END_IF
		
	XtsSystemInitialisation.XTSMode:
		IF XtsHardware.IsInSim() THEN
			XtsHwState := XtsSystemInitialisation.MoverIdDetection;
		ELSE
			XtsHwState := XtsSystemInitialisation.CheckModuleVoltages;
			//XtsHwState := XtsSystemInitialisation.MoverIdDetection;
		END_IF
		
	XtsSystemInitialisation.CheckModuleVoltages:
		IF XtsHardware.Is24VdcOK() = 2 AND XtsHardware.Is48VdcOK() = 2 THEN
			XtsHwState := XtsSystemInitialisation.MoverIdDetection;
		END_IF
	
	XtsSystemInitialisation.MoverIdDetection:
		IF XtsHardware.TriggerMoverID() THEN
			XtsHwState := XtsSystemInitialisation.HWReady;
			GetTMSMoverInterface();
		END_IF
	
	XtsSystemInitialisation.HWReady:
		Initialise := 2;	
END_CASE]]></ST>
      </Implementation>
    </Method>
    <Method Name="IsXtsIdle" Id="{98f4e7e8-94b6-4461-9a7b-2bd1c0aafde4}">
      <Declaration><![CDATA[METHOD IsXtsIdle : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IsXtsIdle := DisableSequence.Done;]]></ST>
      </Implementation>
    </Method>
    <Method Name="IsXtsReady" Id="{73e2c3f0-1b32-45c2-a8cc-fbf01ac18258}">
      <Declaration><![CDATA[METHOD IsXtsReady : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IsXtsReady := _XtsEnabled;]]></ST>
      </Implementation>
    </Method>
    <Property Name="MoverArray" Id="{5c1cfa9c-be49-4324-bcf5-1be968bfce44}">
      <Declaration><![CDATA[PROPERTY MoverArray : array[1..SystemParameters.NumberOfMovers] of I_XtsMoverAxis]]></Declaration>
      <Get Name="Get" Id="{2b512b99-b3b1-44cb-bf62-7cd45f8e95a6}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[MoverArray := _MoverArray;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{806f65c3-00a8-4311-b6e2-aa6af5313c87}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[_MoverArray := MoverArray;
EnableSequence.MoverArray := MoverArray;
DisableSequence.MoverArray := MoverArray;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Method Name="MoverHomeSequence" Id="{5c2deb91-ebd0-4a93-99ec-6a6bbbd5e076}" FolderPath="Operations\">
      <Declaration><![CDATA[METHOD PUBLIC MoverHomeSequence : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[FOR i := 1 TO SystemParameters.NumberOfMovers DO
	_MoverArray[i].MoveTo(RequiredPosition := _homePosition, MoveVelocity := _HomeSpeed,NonModuloMove := false);
END_FOR 
MoverHomeSequence := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="StopXts" Id="{4b648283-f5f4-4d47-a58f-be53e519365d}" FolderPath="Operations\">
      <Declaration><![CDATA[METHOD StopXts : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[mcCollisionGroup.GroupStop();]]></ST>
      </Implementation>
    </Method>
    <Property Name="Tracks" Id="{8eb8f4ad-907d-4ff8-9789-8832cf169bda}">
      <Declaration><![CDATA[PROPERTY PUBLIC Tracks : UINT]]></Declaration>
      <Get Name="Get" Id="{92aead6c-a657-4c6b-8c96-d2980dde0d91}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Tracks := _tracks;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{a91cec47-6d8c-44af-ab33-578bdff8cace}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[_tracks := Tracks;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <LineIds Name="Xts">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="Xts.ActivateTracksInMovers">
      <LineId Id="3" Count="3" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="Xts.Cycle">
      <LineId Id="3" Count="17" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="Xts.DisableXTS">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="Xts.EnableXTS">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="Xts.GetTMSMoverInterface">
      <LineId Id="3" Count="6" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="Xts.GetTrackByOCTID">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="Xts.HomePosition.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="Xts.HomePosition.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="Xts.HomeSpeed.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="Xts.HomeSpeed.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="Xts.Initialise">
      <LineId Id="3" Count="55" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="Xts.IsXtsIdle">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="Xts.IsXtsReady">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="Xts.MoverArray.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="Xts.MoverArray.Set">
      <LineId Id="3" Count="1" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="Xts.MoverHomeSequence">
      <LineId Id="3" Count="2" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="Xts.StopXts">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="Xts.Tracks.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="Xts.Tracks.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>