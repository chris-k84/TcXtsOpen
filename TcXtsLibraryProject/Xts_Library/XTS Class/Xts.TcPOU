<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="Xts" Id="{4538c683-94fc-49a1-b5ad-30ffec5e4eff}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK Xts EXTENDS PML_Method_Base IMPLEMENTS I_Initialise
VAR
	_homePosition : MC_LREAL;
	_HomeSpeed : MC_LREAL;
	XtsIoEnvVar : XTSIOEnvVarWrapper;
	mcCollisionGroup : CollisionGroup;
	XtsHardware : XTSHardware_V2;
	_XtsTrackHardware : IXtsHardware;
	XtsHwState : XtsHardwareState;
	EnableSequence : XtsEnableSequence(mcCollisionGroup);
	DisableSequence : XtsDisableSequence(mcCollisionGroup);
	State : UINT;	
	i : UINT;
	AtHome: BOOL;
	_tracks : UINT;
	_MoverArray : ARRAY[1..SystemParameters.NumberOfMovers] OF I_XtsMoverAxis;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[{analysis -2}]]></ST>
    </Implementation>
    <Folder Name="Action States" Id="{52cebbbe-42d9-490e-86b9-bf5151fd8965}" />
    <Folder Name="Operations" Id="{0e8598c4-3d58-4c14-a12f-6fd3f3ea02bf}" />
    <Method Name="Aborting" Id="{f4025447-c7fa-4c21-bcd4-655228f2af38}" FolderPath="Action States\">
      <Declaration><![CDATA[METHOD PROTECTED Aborting : BOOL
VAR
	
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[CASE State OF
	0:
		DisableSequence.Disable();
		State := 1;
			
	1:
		IF DisableSequence.Done THEN
			State := 0;
			ipackml.SetStateComplete();
			Aborting := TRUE;
		END_IF
	ELSE
		Aborting := FALSE;
END_CASE
]]></ST>
      </Implementation>
    </Method>
    <Method Name="ActivateTracksInMovers" Id="{682f2d4e-bf73-44bf-93e3-716a6d45755c}" FolderPath="Operations\">
      <Declaration><![CDATA[METHOD PUBLIC ActivateTracksInMovers : BOOL
VAR
	ActivateTrackResult : BOOL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FOR i := 1 TO SystemParameters.NumberOfMovers DO
	_MoverArray[i].ActivateTrack(newTrack := _MoverArray[i].MoversActiveTrack,
									Track := XtsHardware.GetTrackByOTCID(trackOTCID := _MoverArray[i].MoversActiveTrack));
END_FOR
ActivateTracksInMovers := true;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Clearing" Id="{7ebb7a7d-7271-4f69-b79f-9ca8eeb5c574}" FolderPath="Action States\">
      <Declaration><![CDATA[METHOD PROTECTED Clearing : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[CASE State OF
	0:
		IF ActivateTracksInMovers() THEN
			State := 1;
		END_IF	
		
	1:
		IF EnableSequence.Enable() THEN
			State := 2;
		END_IF
		
	2:
		IF  EnableSequence.Done THEN
			ipackml.SetStateComplete();
			State := 0;
			Clearing := TRUE;
		END_IF
	ELSE
		Clearing := FALSE;
END_CASE
]]></ST>
      </Implementation>
    </Method>
    <Method Name="Cycle" Id="{da42838e-fb00-40a5-96f4-b787aa883566}">
      <Declaration><![CDATA[METHOD PUBLIC Cycle : HRESULT
VAR
	EnableResult : HRESULT;
	DisableResult : HRESULT;
	GrpStopResult : HRESULT;
	CollisionResult : HRESULT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Cycle := SUPER^.Cycle();
EnableResult := EnableSequence.Cycle();
DisableResult := DisableSequence.Cycle();
CollisionResult := mcCollisionGroup.Cycle();

IF EnableResult = E_FAIL OR
	DisableResult = E_FAIL OR
	GrpStopResult = E_FAIL OR
	CollisionResult = E_FAIL THEN
	Cycle := E_FAIL;
END_IF
]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{7656e6f5-212b-4fe7-8cf3-636ae6db9244}">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
	XtsRunner : I_ObjectRunner;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[XtsRunner.AddComponent(THIS^);]]></ST>
      </Implementation>
    </Method>
    <Method Name="GetTMSMoverInterface" Id="{0e64eced-3444-47ea-9660-c818e7a9dea9}" FolderPath="Operations\">
      <Declaration><![CDATA[METHOD PUBLIC GetTMSMoverInterface : BOOL
VAR_INPUT
END_VAR
VAR
	//TmsMoverInterface : ITmsMover;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[//FOR i := 1 TO SystemParameters.NumberOfMovers DO
//	IF __QUERYINTERFACE(_MoverArray[i],TmsMoverInterface) THEN
//		TmsMoverInterface.SetMoverInterface(MoverInterface := _XtsTrackHardware.GetMoverEnvInterface(i));
//	END_IF
//END_FOR
FOR i := 1 TO SystemParameters.NumberOfMovers DO
	_MoverArray[i].MoverXtsIoEnvInterface := XtsIoEnvVar.GetMoverInterface(i);
END_FOR]]></ST>
      </Implementation>
    </Method>
    <Property Name="HomePosition" Id="{7488af26-181d-46aa-9621-c1c9bb1f6cd2}">
      <Declaration><![CDATA[PROPERTY PUBLIC HomePosition : mc_lreal]]></Declaration>
      <Get Name="Get" Id="{204400f9-e0e2-4b38-927a-449ec513969c}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[HomePosition := _homePosition;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{21b02a35-3878-4951-a8db-c2a9a5cebc6f}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[_homePosition := HomePosition;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Property Name="HomeSpeed" Id="{1d1b8038-88e9-4101-981d-99bed1ba5b18}">
      <Declaration><![CDATA[PROPERTY HomeSpeed : mc_lreal]]></Declaration>
      <Get Name="Get" Id="{0a3ad8ef-2031-4e74-8b6e-8a654900fd7a}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[HomeSpeed := _HomeSpeed;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{ddb9be5e-d4fd-4d3d-a099-37476a9afab3}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[_HomeSpeed := HomeSpeed;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Method Name="Initialise" Id="{3c52ae7d-89c5-4979-a1bd-5023a279947c}">
      <Declaration><![CDATA[METHOD Initialise : HRESULT
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[CASE XtsHwState OF
	XtsHardwareState.Init:
		IF XtsHardware.SetTracksForDetection() THEN
			XtsHwState := XtsHardwareState.Redetect;
		END_IF
		
	XtsHardwareState.Redetect:
		IF XtsHardware.TriggerMoverDetection() THEN
			XtsHwState := XtsHardwareState.MoversValid;
		END_IF
		
	XtsHardwareState.MoversValid:
		IF XtsHardware.getAllMoversValid() THEN
			XtsHwState := XtsHardwareState.AllMoversFound;
		END_IF
	
	XtsHardwareState.AllMoversFound:
		IF XtsHardware.getMoversDetected() THEN
			XtsHwState := XtsHardwareState.XTSMode;
		END_IF
		
	XtsHardwareState.XTSMode:
		IF XtsHardware.IsInSim() THEN
			XtsHwState := XtsHardwareState.MoverIdDetection;
		ELSE
			XtsHwState := XtsHardwareState.CheckModuleVoltages;
		END_IF
		
	XtsHardwareState.CheckModuleVoltages:
		IF XtsHardware.Is24VdcOK() = 2 AND XtsHardware.Is48VdcOK() = 2 THEN
			XtsHwState := XtsHardwareState.MoverIdDetection;
		END_IF
	
	XtsHardwareState.MoverIdDetection:
		IF XtsHardware.TriggerMoverID() THEN
			XtsHwState := XtsHardwareState.HWReady;
			GetTMSMoverInterface();
		END_IF
	
	XtsHardwareState.HWReady:
		Initialise := 2;	
END_CASE]]></ST>
      </Implementation>
    </Method>
    <Property Name="MoverArray" Id="{5c1cfa9c-be49-4324-bcf5-1be968bfce44}">
      <Declaration><![CDATA[PROPERTY MoverArray : array[1..SystemParameters.NumberOfMovers] of I_XtsMoverAxis]]></Declaration>
      <Get Name="Get" Id="{2b512b99-b3b1-44cb-bf62-7cd45f8e95a6}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[MoverArray := _MoverArray;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{806f65c3-00a8-4311-b6e2-aa6af5313c87}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[_MoverArray := MoverArray;
EnableSequence.MoverArray := MoverArray;
DisableSequence.MoverArray := MoverArray;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Method Name="MoverHomeSequence" Id="{5c2deb91-ebd0-4a93-99ec-6a6bbbd5e076}" FolderPath="Operations\">
      <Declaration><![CDATA[METHOD PUBLIC MoverHomeSequence : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[FOR i := 1 TO SystemParameters.NumberOfMovers DO
	_MoverArray[i].MoveTo(RequiredPosition := _homePosition, MoveVelocity := _HomeSpeed);
END_FOR 
MoverHomeSequence := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Resetting" Id="{284a2a86-6aa9-45b7-b9c4-39c067c7a709}" FolderPath="Action States\">
      <Declaration><![CDATA[METHOD PROTECTED Resetting : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[CASE State OF
	0:
		IF MoverHomeSequence() THEN
			State := 1;
		END_IF
	
	1:
		AtHome := TRUE;
		FOR i := 1 TO SystemParameters.NumberOfMovers DO
				AtHome := AtHome AND _MoverArray[i].isMoverStationary();
		END_FOR 
		IF AtHome THEN
			State := 0;
			ipackml.SetStateComplete();	
			Resetting := TRUE;
		END_IF
	ELSE
		Resetting := FALSE;	
END_CASE]]></ST>
      </Implementation>
    </Method>
    <Method Name="Stopping" Id="{3cd6a931-8a7e-487a-9f0d-8a2db098be82}" FolderPath="Action States\">
      <Declaration><![CDATA[METHOD PROTECTED Stopping : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[CASE State OF
	0:
		mcCollisionGroup.GroupStop();
		State := 1;
		
	1:
		IF mcCollisionGroup.GroupState = CAGroupStatus.mcGroupStateStandby THEN
			State := 0;
			ipackml.SetStateComplete();
			Stopping := TRUE;
		END_IF
	ELSE
		Stopping := FALSE;
END_CASE
]]></ST>
      </Implementation>
    </Method>
    <Property Name="Tracks" Id="{8eb8f4ad-907d-4ff8-9789-8832cf169bda}">
      <Declaration><![CDATA[PROPERTY PUBLIC Tracks : UINT]]></Declaration>
      <Get Name="Get" Id="{92aead6c-a657-4c6b-8c96-d2980dde0d91}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Tracks := _tracks;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{a91cec47-6d8c-44af-ab33-578bdff8cace}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[_tracks := Tracks;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <LineIds Name="Xts">
      <LineId Id="78" Count="0" />
    </LineIds>
    <LineIds Name="Xts.Aborting">
      <LineId Id="22" Count="0" />
      <LineId Id="25" Count="7" />
      <LineId Id="38" Count="0" />
      <LineId Id="23" Count="0" />
      <LineId Id="36" Count="1" />
      <LineId Id="24" Count="0" />
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="Xts.ActivateTracksInMovers">
      <LineId Id="23" Count="0" />
      <LineId Id="25" Count="0" />
      <LineId Id="32" Count="0" />
      <LineId Id="27" Count="0" />
      <LineId Id="12" Count="0" />
    </LineIds>
    <LineIds Name="Xts.Clearing">
      <LineId Id="45" Count="0" />
      <LineId Id="48" Count="13" />
      <LineId Id="65" Count="0" />
      <LineId Id="46" Count="0" />
      <LineId Id="66" Count="1" />
      <LineId Id="47" Count="0" />
      <LineId Id="18" Count="0" />
    </LineIds>
    <LineIds Name="Xts.Cycle">
      <LineId Id="13" Count="0" />
      <LineId Id="17" Count="1" />
      <LineId Id="5" Count="0" />
      <LineId Id="30" Count="0" />
      <LineId Id="29" Count="0" />
      <LineId Id="33" Count="3" />
      <LineId Id="32" Count="0" />
      <LineId Id="28" Count="0" />
    </LineIds>
    <LineIds Name="Xts.FB_init">
      <LineId Id="7" Count="0" />
    </LineIds>
    <LineIds Name="Xts.GetTMSMoverInterface">
      <LineId Id="29" Count="3" />
      <LineId Id="5" Count="0" />
      <LineId Id="39" Count="0" />
      <LineId Id="41" Count="0" />
      <LineId Id="38" Count="0" />
    </LineIds>
    <LineIds Name="Xts.HomePosition.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="Xts.HomePosition.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="Xts.HomeSpeed.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="Xts.HomeSpeed.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="Xts.Initialise">
      <LineId Id="6" Count="36" />
      <LineId Id="44" Count="3" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="Xts.MoverArray.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="Xts.MoverArray.Set">
      <LineId Id="2" Count="0" />
      <LineId Id="6" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="Xts.MoverHomeSequence">
      <LineId Id="6" Count="1" />
      <LineId Id="5" Count="0" />
      <LineId Id="8" Count="0" />
    </LineIds>
    <LineIds Name="Xts.Resetting">
      <LineId Id="41" Count="0" />
      <LineId Id="44" Count="12" />
      <LineId Id="60" Count="0" />
      <LineId Id="42" Count="0" />
      <LineId Id="61" Count="1" />
      <LineId Id="43" Count="0" />
    </LineIds>
    <LineIds Name="Xts.Stopping">
      <LineId Id="21" Count="0" />
      <LineId Id="24" Count="7" />
      <LineId Id="35" Count="0" />
      <LineId Id="22" Count="0" />
      <LineId Id="36" Count="1" />
      <LineId Id="23" Count="0" />
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="Xts.Tracks.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="Xts.Tracks.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>