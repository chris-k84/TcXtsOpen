<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="EnableGroup" Id="{01c66182-3535-4445-8b1b-a8f549e6d0ab}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'hide_all_locals'}
FUNCTION_BLOCK EnableGroup EXTENDS TaskBase
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR
VAR
	groupEnable			: MC_GroupEnable;
	_caGroup			: ICollisionGroup;
	_enableGroup : BOOL;
	Logger : TcMessage_Ext;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[{analysis -2}]]></ST>
    </Implementation>
    <Method Name="Abort" Id="{8e535bd0-5fdc-4fa1-a309-8fd0da8ee400}">
      <Declaration><![CDATA[METHOD Abort : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[groupEnable.Execute := FALSE;
Abort := TRUE;
State := 0;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Cycle" Id="{53999691-fece-418c-ba0c-d2348e6bf666}">
      <Declaration><![CDATA[METHOD Cycle : HRESULT
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Cycle := S_OK;
CASE State OF
	0:
		IF _enableGroup THEN
			Cycle := S_PENDING;
			_Done := FALSE;
			_Error := FALSE;
			_Busy := TRUE;
			groupEnable.Execute := TRUE;
			IF groupEnable.Busy THEN
				State := 10;
				_enableGroup := FALSE;
				Logger.Send(TC_EVENTS.XtsCaGroupEvents.CAGroupEnabling,'');
			END_IF
		END_IF
	
	10:
		IF NOT groupEnable.Busy THEN
			IF groupEnable.Done THEN
				_Done := TRUE;
				Logger.Send(TC_EVENTS.XtsCaGroupEvents.CAGroupEnabled,'');
			ELSIF groupEnable.Error THEN
				_Error := TRUE;
				Logger.Send(TC_EVENTS.XtsCaGroupEvents.CAGroupEnableError,'');
			END_IF
			_Busy := FALSE;
			groupEnable.Execute := false;
			State := 0;
			Cycle := S_OK;
		END_IF
	ELSE
		Cycle := E_FAIL;
END_CASE


groupEnable(AxesGroup := _caGroup.GroupRef);]]></ST>
      </Implementation>
    </Method>
    <Method Name="Execute" Id="{6b5a42b1-94d9-46bc-bf55-d1fbc24c1815}">
      <Declaration><![CDATA[METHOD Execute : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Execute := _enableGroup := true;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{7ad275c7-67dd-42d2-bf9e-97af0354a9b5}">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
	MyCaGroup : ICollisionGroup;	
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[_caGroup := MyCaGroup;]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="EnableGroup">
      <LineId Id="139" Count="0" />
    </LineIds>
    <LineIds Name="EnableGroup.Abort">
      <LineId Id="4" Count="2" />
    </LineIds>
    <LineIds Name="EnableGroup.Cycle">
      <LineId Id="44" Count="0" />
      <LineId Id="6" Count="2" />
      <LineId Id="39" Count="0" />
      <LineId Id="9" Count="22" />
      <LineId Id="40" Count="0" />
      <LineId Id="32" Count="0" />
      <LineId Id="45" Count="1" />
      <LineId Id="33" Count="2" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="EnableGroup.Execute">
      <LineId Id="4" Count="0" />
    </LineIds>
    <LineIds Name="EnableGroup.FB_init">
      <LineId Id="7" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>