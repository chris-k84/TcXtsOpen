<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="RemoveAllMoverFromGroup" Id="{1511d483-7397-4cd0-a6db-08dd652e8cbb}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK RemoveAllMoverFromGroup EXTENDS TaskBase
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR
VAR
	RemoveAllFromGrp			: MC_UngroupAllAxes;
	_caGroup			: ICollisionGroup;
	_removeAllMovers : BOOL;
	_errorId: UDINT;
	Logger : TcMessage_Ext;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="Abort" Id="{e7050a73-9e5f-49ae-8033-79483a14dcd8}">
      <Declaration><![CDATA[METHOD Abort : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[RemoveAllFromGrp.Execute := FALSE;
Abort := true;
State := 0;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Cycle" Id="{c68e4170-0a2c-460f-9ca9-a0eca48c8c15}">
      <Declaration><![CDATA[METHOD Cycle : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[CASE State OF
	0:
		IF _removeAllMovers THEN
			_Done := FALSE;
			_Error := FALSE;
			_Busy := TRUE;
			RemoveAllFromGrp.Execute := TRUE;
			IF RemoveAllFromGrp.Busy THEN
				_removeAllMovers := FALSE;
				State := 10;
				Logger.Send(TC_EVENTS.XtsCaGroupEvents.CAGroupRemoving,'');
			END_IF
		END_IF
		
	10:
		IF NOT RemoveAllFromGrp.Busy THEN
			IF RemoveAllFromGrp.Done THEN
				_Done := TRUE;
				Logger.Send(TC_EVENTS.XtsCaGroupEvents.AllMoversRemoved,'');
			ELSIF RemoveAllFromGrp.Error THEN
				_Error := TRUE;
				_ErrorId := RemoveAllFromGrp.ErrorId;
				Logger.Send(TC_EVENTS.XtsCaGroupEvents.CAGroupRemoveError,'');
			END_IF
			_Busy := FALSE;
			RemoveAllFromGrp.Execute := false;
			State := 0;
		END_IF
END_CASE


RemoveAllFromGrp(AxesGroup := _caGroup.GroupRef);]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{639b4db7-7f3c-417a-8c60-934c2a4c839a}">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
	CAGroup : ICollisionGroup;	
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[_caGroup := CAGroup;]]></ST>
      </Implementation>
    </Method>
    <Method Name="RemoveAllMover" Id="{0b41790b-140c-4897-91fc-096c85c5f45b}">
      <Declaration><![CDATA[METHOD RemoveAllMover : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[RemoveAllMover := _removeAllMovers := true;]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="RemoveAllMoverFromGroup">
      <LineId Id="302" Count="0" />
    </LineIds>
    <LineIds Name="RemoveAllMoverFromGroup.Abort">
      <LineId Id="4" Count="0" />
      <LineId Id="8" Count="0" />
      <LineId Id="6" Count="0" />
    </LineIds>
    <LineIds Name="RemoveAllMoverFromGroup.Cycle">
      <LineId Id="6" Count="30" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="RemoveAllMoverFromGroup.FB_init">
      <LineId Id="7" Count="0" />
    </LineIds>
    <LineIds Name="RemoveAllMoverFromGroup.RemoveAllMover">
      <LineId Id="8" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>