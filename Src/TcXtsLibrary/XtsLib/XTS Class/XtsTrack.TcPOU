<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="XtsTrack" Id="{9b564055-e4ef-49ec-91fa-4e16cb16a3f0}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK XtsTrack EXTENDS PML_Method_Base IMPLEMENTS IXtsTrack 
VAR_INPUT
	TmsSwitch : ITF_TmsSwitch;
END_VAR
VAR_OUTPUT
END_VAR
VAR
	_trackLength : MC_LREAL;
	_homePosition : MC_LREAL;
	HomeSpeed : MC_LREAL := 1000.0;
	mcCollisionGroup : CollisionGroup;
	_XtsTrackHardware : IXtsHardware;
	EnableSequence : XtsEnableSequence(mcCollisionGroup);
	DisableSequence : XtsDisableSequence(mcCollisionGroup);
	GroupStop : StopMoverGroup(mcCollisionGroup);
	State : INT;	
	i : DINT;
	AtHome: BOOL;
	_tracks : UDINT;
	_MoverArray : ARRAY[1..SystemParameters.NumberOfMovers] OF IMover;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Action States" Id="{d2e90aa7-a109-454e-9f75-959543a1e09f}" />
    <Folder Name="Operations" Id="{416b7ceb-32d0-4517-b09b-a66e23161c2e}" />
    <Folder Name="Wait States" Id="{95e71483-3166-4f6e-a443-761880040333}" />
    <Method Name="Aborting" Id="{b99e0521-987a-4d72-a1dd-c5af875fc6fb}" FolderPath="Action States\">
      <Declaration><![CDATA[METHOD PROTECTED Aborting : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[CASE State OF
	0:
		DisableSequence.Disable();
		State := 1;
			
	1:
		IF DisableSequence.Done THEN
			State := 0;
			ipackml.SetStateComplete();
		END_IF
END_CASE
]]></ST>
      </Implementation>
    </Method>
    <Method Name="ActivateTracksInMovers" Id="{f07dde83-d085-4cf6-bf9b-a6e81e2388f6}" FolderPath="Operations\">
      <Declaration><![CDATA[METHOD PUBLIC ActivateTracksInMovers : BOOL
VAR_INPUT
END_VAR
VAR
	iTmsMover : ITmsMover;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FOR i := 1 TO SystemParameters.NumberOfMovers DO
	IF __QUERYINTERFACE(_MoverArray[i],iTmsMover) THEN
		iTmsMover.ActivateTrack(newTrack := iTmsMover.ActiveTrack);
	END_IF
END_FOR
ActivateTracksInMovers := true;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Clearing" Id="{6c462925-88a1-4bf3-a41d-1dd22d631ab8}" FolderPath="Action States\">
      <Declaration><![CDATA[METHOD PROTECTED Clearing : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[CASE State OF
	0:
		IF EnableSequence.Enable() THEN
			State := 1;
		END_IF	
		
	1:
		IF EnableSequence.Done THEN
			State := 2;
		END_IF
		
	2:
		IF ActivateTracksInMovers() THEN
			ipackml.SetStateComplete();
			State := 0;
		END_IF
END_CASE
]]></ST>
      </Implementation>
    </Method>
    <Method Name="Cycle" Id="{c6298617-ef53-4622-9622-96c81078d866}">
      <Declaration><![CDATA[METHOD PUBLIC Cycle : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[SUPER^();
_XtsTrackHardware.Cycle();
EnableSequence(arrMovers := MoverArray);
DisableSequence(arrMovers := MoverArray);
GroupStop();
mcCollisionGroup.Cycle();]]></ST>
      </Implementation>
    </Method>
    <Method Name="GetTMSMoverInterface" Id="{8a0ffa9f-0aa2-4c3c-a17d-9828995afbc3}" FolderPath="Operations\">
      <Declaration><![CDATA[METHOD PUBLIC GetTMSMoverInterface : BOOL
VAR_INPUT
END_VAR
VAR
	iTmsMover : ITmsMover;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FOR i := 1 TO SystemParameters.NumberOfMovers DO
	IF __QUERYINTERFACE(_MoverArray[i],iTmsMover) THEN
		iTmsMover.SetMoverInterface(MoverInterface := _XtsTrackHardware.GetMoverEnvInterface(DINT_TO_UINT(i)));
	END_IF
END_FOR]]></ST>
      </Implementation>
    </Method>
    <Property Name="HomePosition" Id="{17d8d860-04e6-4fdc-9d29-4118d8eda955}">
      <Declaration><![CDATA[PROPERTY PUBLIC HomePosition : mc_lreal]]></Declaration>
      <Get Name="Get" Id="{620c6b86-3832-4e3f-9912-ef7e2a1a6514}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[HomePosition := _homePosition;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{f190637e-4d36-4143-baa6-9db775f41566}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[_homePosition := HomePosition;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Property Name="MoverArray" Id="{6df58ece-5969-4e6c-a7c6-dc22edc8a834}">
      <Declaration><![CDATA[PROPERTY MoverArray : array[1..SystemParameters.NumberOfMovers] of IMover]]></Declaration>
      <Get Name="Get" Id="{954aa60a-2861-4494-9e88-ab537570212f}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[MoverArray := _MoverArray;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{08f1328f-e788-4ed2-ab2f-485fc9f568c6}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[_MoverArray := MoverArray;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Method Name="MoverHomeSequence" Id="{75121f0d-c39e-4602-b6e8-ef3881ab6657}" FolderPath="Operations\">
      <Declaration><![CDATA[METHOD PUBLIC MoverHomeSequence : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[FOR i := 1 TO SystemParameters.NumberOfMovers DO
	_MoverArray[i].MoveTo(Position := _homePosition, Velocity := HomeSpeed, BackwardMove := FALSE);
END_FOR 
MoverHomeSequence := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Resetting" Id="{22756c6e-a78b-42b3-9ed5-8fc95da8c2cb}" FolderPath="Action States\">
      <Declaration><![CDATA[METHOD PROTECTED Resetting : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[CASE State OF
	0:
		IF MoverHomeSequence() THEN
			State := 1;
		END_IF
	
	1:
		AtHome := TRUE;
		FOR i := 1 TO SystemParameters.NumberOfMovers DO
				AtHome := AtHome AND _MoverArray[i].isStationary();
		END_FOR 
		IF AtHome THEN
			State := 0;
			ipackml.SetStateComplete();	
		END_IF	
END_CASE
]]></ST>
      </Implementation>
    </Method>
    <Method Name="Stopping" Id="{baffc46c-ec7e-42a9-8efd-6e0c5b17da9f}" FolderPath="Action States\">
      <Declaration><![CDATA[METHOD PROTECTED Stopping : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[CASE State OF
	0:
		GroupStop.Execute();
		State := 1;
		
	1:
		IF GroupStop.Done THEN
			State := 0;
			ipackml.SetStateComplete();
		END_IF
END_CASE
]]></ST>
      </Implementation>
    </Method>
    <Property Name="TrackLength" Id="{4f244eb1-0239-423a-8574-4ccb93081483}">
      <Declaration><![CDATA[PROPERTY PUBLIC TrackLength : mc_lreal]]></Declaration>
      <Get Name="Get" Id="{962af0e5-68fc-457e-92c4-2ae643ddac5e}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[TrackLength := _trackLength;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{9d3b1cf5-ae4d-4af9-ab8c-ba44e55a4cc2}">
        <Declaration><![CDATA[PUBLIC 
VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[_trackLength := TrackLength;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Property Name="Tracks" Id="{7741ef95-8846-4cc0-aa81-d8ac8ebba247}">
      <Declaration><![CDATA[PROPERTY PUBLIC Tracks : UDINT]]></Declaration>
      <Get Name="Get" Id="{d2af4e1e-cc7b-4b07-b5c4-6cf6f6dda28f}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Tracks := _tracks;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{bb7806ec-85ad-4f70-9606-95b8e7565462}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[_tracks := Tracks;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Method Name="Undefined" Id="{8abde942-7373-4a42-9ae3-0ea7bf1578ed}" FolderPath="Wait States\">
      <Declaration><![CDATA[METHOD PROTECTED Undefined : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF _XtsTrackHardware.IsHardwareOk() THEN
	GetTMSMoverInterface();
	ipackml.PmlStateCommand(Command := E_PMLCommand.ePMLCommand_Abort);
END_IF]]></ST>
      </Implementation>
    </Method>
    <Property Name="XtsHardware" Id="{f687f8ba-edc3-4883-a8b6-7a3b9e8aae5e}">
      <Declaration><![CDATA[PROPERTY XtsHardware : IXtsHardware]]></Declaration>
      <Get Name="Get" Id="{a54e1af4-8638-49fd-b567-47af1a963833}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[XtsHardware := _XtsTrackHardware;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{eeab47fc-25af-444e-a475-96561a427d1c}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[_XtsTrackHardware := XtsHardware;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <LineIds Name="XtsTrack">
      <LineId Id="78" Count="0" />
    </LineIds>
    <LineIds Name="XtsTrack.Aborting">
      <LineId Id="22" Count="0" />
      <LineId Id="25" Count="7" />
      <LineId Id="23" Count="1" />
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="XtsTrack.ActivateTracksInMovers">
      <LineId Id="8" Count="3" />
      <LineId Id="5" Count="0" />
      <LineId Id="12" Count="0" />
    </LineIds>
    <LineIds Name="XtsTrack.Clearing">
      <LineId Id="45" Count="0" />
      <LineId Id="48" Count="13" />
      <LineId Id="46" Count="1" />
      <LineId Id="18" Count="0" />
    </LineIds>
    <LineIds Name="XtsTrack.Cycle">
      <LineId Id="13" Count="0" />
      <LineId Id="16" Count="3" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="XtsTrack.GetTMSMoverInterface">
      <LineId Id="15" Count="3" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="XtsTrack.HomePosition.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="XtsTrack.HomePosition.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="XtsTrack.MoverArray.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="XtsTrack.MoverArray.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="XtsTrack.MoverHomeSequence">
      <LineId Id="6" Count="1" />
      <LineId Id="5" Count="0" />
      <LineId Id="8" Count="0" />
    </LineIds>
    <LineIds Name="XtsTrack.Resetting">
      <LineId Id="41" Count="0" />
      <LineId Id="44" Count="12" />
      <LineId Id="42" Count="1" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="XtsTrack.Stopping">
      <LineId Id="21" Count="0" />
      <LineId Id="24" Count="7" />
      <LineId Id="22" Count="1" />
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="XtsTrack.TrackLength.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="XtsTrack.TrackLength.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="XtsTrack.Tracks.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="XtsTrack.Tracks.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="XtsTrack.Undefined">
      <LineId Id="12" Count="2" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="XtsTrack.XtsHardware.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="XtsTrack.XtsHardware.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>