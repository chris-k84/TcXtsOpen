<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="FB_Mover" Id="{85f62a02-889f-4b30-9036-53b84a79c2ee}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_Mover IMPLEMENTS IMover
VAR
	axesEnable		: MC_Power;
	axesReset		: AxesReset(_axis);
	axesMoveTo 		: MoveMoverToPosition(_axis) := (Gap := 100.0);
	axesHalt 		: HaltMover(_axis);
	axesReadError : Tc2_MC2.MC_ReadAxisError;
	_axis 			: AXIS_REF;
	_identInGroup : INT;
	_trackLength : MC_LREAL;
	_targetPos : LREAL;
	_MoverErrorId : DWORD;
	_arrZones : ARRAY[1..4] OF DINT;
	_arrVelocities : ARRAY[1..4] OF mc_LREAL;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[axesMoveTo();
axesHalt();
axesReset();
_axis.ReadStatus();
axesEnable(Axis := _axis);
axesReadError(Axis := _axis, Enable := TRUE, AxisErrorID => _MoverErrorId);
]]></ST>
    </Implementation>
    <Folder Name="Methods" Id="{d990f5ad-a7ee-4f95-bbee-90adbd32272b}" />
    <Folder Name="Properties" Id="{9a91c5be-52fe-48a0-bc15-6ebc4b6012ce}" />
    <Property Name="Acceleration" Id="{a3bda034-ea93-4d84-971d-34fbe2eb3e0f}" FolderPath="Properties\">
      <Declaration><![CDATA[PROPERTY PUBLIC Acceleration : mc_lreal]]></Declaration>
      <Get Name="Get" Id="{8c0c7777-8a58-44b5-831c-d4a0cf61096f}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Acceleration := axesMoveTo.Acceleration;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{15b9d915-5373-4e6e-a7cf-25aa0d155d51}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[axesMoveTo.Acceleration := Acceleration;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Property Name="AxisRef" Id="{2843dfe6-0082-40ff-8e1b-e945b442209e}" FolderPath="Properties\">
      <Declaration><![CDATA[PROPERTY PUBLIC AxisRef : reference to AXIS_REF]]></Declaration>
      <Get Name="Get" Id="{441b4e2d-2dd8-4dfd-acba-52c3ad9f53ca}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[AxisRef REF= THIS^._axis;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="Deceleration" Id="{00007a36-41b4-4823-a8e6-8b128b9220ef}" FolderPath="Properties\">
      <Declaration><![CDATA[PROPERTY PUBLIC Deceleration : mc_lreal]]></Declaration>
      <Get Name="Get" Id="{0743f223-d07f-40e0-ae56-9ad8fd39c497}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Deceleration := axesMoveTo.Deceleration;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{8a8da0aa-4ad5-4681-8cbf-8df29be399b8}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[axesMoveTo.Deceleration := Deceleration;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Method Name="DisableAxis" Id="{04391d47-2802-4391-8e85-6f6f9a8009c0}" FolderPath="Methods\">
      <Declaration><![CDATA[METHOD PUBLIC DisableAxis : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[axesEnable.Enable := false;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="EnableAxis" Id="{916b8003-bdc6-4d15-969b-eb3f20546af3}" FolderPath="Methods\">
      <Declaration><![CDATA[METHOD PUBLIC EnableAxis : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[axesEnable.Enable := axesEnable.Enable_Negative := axesEnable.Enable_Positive := TRUE;
axesEnable.Override := 100;]]></ST>
      </Implementation>
    </Method>
    <Property Name="Gap" Id="{df4301cc-49ae-42f0-9fb5-132b4f344460}" FolderPath="Properties\">
      <Declaration><![CDATA[PROPERTY PUBLIC Gap : mc_lreal]]></Declaration>
      <Get Name="Get" Id="{b3b25d73-9e78-4a8e-aa02-29541270bc33}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Gap := axesMoveTo.Gap;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{1ed6cdb7-78d2-4469-8882-1352cf35da3a}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[axesMoveTo.Gap := Gap;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Method Name="HaltAxis" Id="{5275c1d7-51e4-468b-bae6-7d197b328c9f}" FolderPath="Methods\">
      <Declaration><![CDATA[METHOD PUBLIC HaltAxis : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT axesHalt.Busy THEN
	axesHalt.Execute();
	HaltAxis := TRUE;
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="hasError" Id="{0731dcbf-a6a0-405e-88ac-62fdc749ce1d}" FolderPath="Methods\">
      <Declaration><![CDATA[METHOD hasError : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[hasError := _axis.Status.Error;]]></ST>
      </Implementation>
    </Method>
    <Property Name="IdentInGroup" Id="{863b9761-cbc8-44d8-8050-2a1636e9b23e}" FolderPath="Properties\">
      <Declaration><![CDATA[PROPERTY PUBLIC IdentInGroup : int]]></Declaration>
      <Get Name="Get" Id="{2460ad73-8e3d-445e-b8d7-9b894aa7ea8e}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[IdentInGroup := _identInGroup;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{69a139ab-9ae0-43c6-b9bf-2377ec4e46f3}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[_identInGroup := IdentInGroup;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Method Name="isAtPosition" Id="{67155926-7eff-4cd8-a436-a6125aa63be5}" FolderPath="Methods\">
      <Declaration><![CDATA[METHOD isAtPosition : BOOL
VAR_INPUT
	position : MC_LREAL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF position > 1 THEN
	IF _axis.NcToPlc.ModuloActPos < position + 1 AND _axis.NcToPlc.ModuloActPos > position - 1 THEN
		isAtPosition := TRUE;
	END_IF  
ELSE
	IF _axis.NcToPlc.ModuloActPos < position + 1 AND _axis.NcToPlc.ModuloActPos > 0.0  
		OR _axis.NcToPlc.ModuloActPos < _trackLength AND _axis.NcToPlc.ModuloActPos > _trackLength - 1 THEN
		isAtPosition := TRUE;
	END_IF
END_IF
]]></ST>
      </Implementation>
    </Method>
    <Method Name="isDetected" Id="{1c403adf-75d5-4d1d-b5e5-98c1b51f5e05}" FolderPath="Methods\">
      <Declaration><![CDATA[METHOD PUBLIC isDetected : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF _axis.NcToPlc.AxisId = 0 THEN
	RETURN;
END_IF
isDetected := true;]]></ST>
      </Implementation>
    </Method>
    <Method Name="isEnabled" Id="{fae51c40-d1bc-41c8-b30b-e977362b0398}" FolderPath="Methods\">
      <Declaration><![CDATA[METHOD isEnabled : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[isEnabled := not _axis.Status.Disabled;]]></ST>
      </Implementation>
    </Method>
    <Method Name="isStationary" Id="{cc970b73-1098-42f9-b684-982f1c612571}" FolderPath="Methods\">
      <Declaration><![CDATA[METHOD PUBLIC isStationary : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[isStationary := _axis.NcToPlc.SetVelo = 0;]]></ST>
      </Implementation>
    </Method>
    <Property Name="Jerk" Id="{9a69768d-c95b-4d14-9731-0ca2801ab119}" FolderPath="Properties\">
      <Declaration><![CDATA[PROPERTY PUBLIC Jerk : mc_lreal]]></Declaration>
      <Get Name="Get" Id="{9e7bb0c7-f81a-4b2b-b010-20db407de009}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Jerk := axesMoveTo.Jerk;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{1d8fcd9c-d31e-49a8-abee-3c36b6c0dd41}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[axesMoveTo.Jerk := Jerk;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Method Name="ModuloToAbs" Id="{1ab38b34-3edf-4bf3-ac63-8f2c352a45b5}" FolderPath="Methods\">
      <Declaration><![CDATA[METHOD PROTECTED ModuloToAbs : mc_lreal
VAR_INPUT
	moduloPositionDemand: MC_LREAL;
	_backwardsAllowed : BOOL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[//---------code to set actual position from modulo command----------------------
IF NOT _backwardsAllowed THEN
	//--------if you want to go forward-------------------------------------------------------------
	//---------if SetPos is greater than current actual then move to that position--------------------
	//---------else current position is greater, increase moduloturn count by 1 before set---------------
	IF moduloPositionDemand > _axis.NcToPlc.ModuloActPos THEN
		ModuloToAbs := (DINT_TO_LREAL(_Axis.NcToPlc.ModuloActTurns)*_trackLength) + moduloPositionDemand;
	ELSE
		ModuloToAbs := (DINT_TO_LREAL(_Axis.NcToPlc.ModuloActTurns + 1)*_trackLength) + moduloPositionDemand;
	END_IF
ELSE
	//--------if you want to go backwards--------------------------------
	//--------if setPos is less than current actual then move to that position---------------------
	//---------else current position is less, decrease moduloturn count by 1 before set------------
	IF moduloPositionDemand < _axis.NcToPlc.ModuloActPos THEN
		ModuloToAbs := (DINT_TO_LREAL(_Axis.NcToPlc.ModuloActTurns)*_trackLength) + moduloPositionDemand;
	ELSE
		ModuloToAbs := (DINT_TO_LREAL(_Axis.NcToPlc.ModuloActTurns-1)*_trackLength) + moduloPositionDemand;
		//ModuloToAbsolute := ((_Axis.NcToPlc.ModuloActTurns - 1)*GVLAxesRefs.iXTSTrackLength) + moduloPositionDemand;
	END_IF
END_IF]]></ST>
      </Implementation>
    </Method>
    <Property Name="MoverErrorId" Id="{2137719e-b5a1-4682-a2d0-0001ce8d8ee5}" FolderPath="Properties\">
      <Declaration><![CDATA[PROPERTY MoverErrorId : dword]]></Declaration>
      <Get Name="Get" Id="{1b6a7ee9-2942-41cf-9596-83f1f808cbe8}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[MoverErrorId := _MoverErrorId;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{1d09e392-50e7-4b60-8ed6-6bb0b4703e36}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[_MoverErrorId := MoverErrorId;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Method Name="MoveTo" Id="{72bb7891-d6a7-452b-a0d5-5ef44fec51ae}" FolderPath="Methods\">
      <Declaration><![CDATA[METHOD PUBLIC MoveTo : BOOL
VAR_INPUT
	Position : MC_LREAL;
	Velocity : MC_LREAL;
	BackwardMove : BOOL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT isAtPosition(position := Position) THEN
	IF NOT axesMoveTo.Busy THEN
		axesMoveTo.MoveTo(Position := ModuloToAbs(Position, BackwardMove), Velocity := Velocity);
		MoveTo := TRUE;
		_targetPos := Position;
	END_IF
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="ResetAxis" Id="{39a27677-b6f4-4959-8c10-40191fe8181b}" FolderPath="Methods\">
      <Declaration><![CDATA[METHOD PUBLIC ResetAxis : BOOL
VAR_INPUT
END_VAR
VAR
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[axesReset.Execute();
axesMoveTo.Abort();
axesHalt.Abort();]]></ST>
      </Implementation>
    </Method>
    <Property Name="TrackLength" Id="{7929754e-f474-406b-9ccc-2835a01be62c}" FolderPath="Properties\">
      <Declaration><![CDATA[PROPERTY PUBLIC TrackLength : MC_LREAL]]></Declaration>
      <Get Name="Get" Id="{74c84618-ed54-44f2-8255-e9174e3733ee}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[TrackLength := _trackLength;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{65927336-9892-421b-815d-67d2ffb9474c}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[_trackLength := TrackLength;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Property Name="Zones" Id="{7132752b-9f59-4a46-a150-43ba47619df1}" FolderPath="Properties\">
      <Declaration><![CDATA[PROPERTY Zones : array[1..4] of dint]]></Declaration>
      <Get Name="Get" Id="{75ce3c1d-eb75-4217-9e15-d93820df891e}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Zones := _arrZones;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{e14ede83-145e-4ae1-b1a2-80b0712b7280}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[_arrZones := Zones;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Property Name="ZoneVelocities" Id="{0c9eec13-62ea-46e0-bfc7-5fba619d4227}" FolderPath="Properties\">
      <Declaration><![CDATA[PROPERTY ZoneVelocities : array[1..4] of mc_lreal]]></Declaration>
      <Get Name="Get" Id="{a716ace3-ff6d-43c7-b98d-4fb9e88f4e04}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[ZoneVelocities := _arrVelocities;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{4bccd87c-6aff-47f6-b004-f22954a42a30}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[_arrVelocities := ZoneVelocities;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <LineIds Name="FB_Mover">
      <LineId Id="530" Count="5" />
      <LineId Id="95" Count="0" />
    </LineIds>
    <LineIds Name="FB_Mover.Acceleration.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_Mover.Acceleration.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_Mover.AxisRef.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_Mover.Deceleration.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_Mover.Deceleration.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_Mover.DisableAxis">
      <LineId Id="31" Count="0" />
      <LineId Id="20" Count="0" />
    </LineIds>
    <LineIds Name="FB_Mover.EnableAxis">
      <LineId Id="13" Count="0" />
      <LineId Id="17" Count="0" />
    </LineIds>
    <LineIds Name="FB_Mover.Gap.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_Mover.Gap.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_Mover.HaltAxis">
      <LineId Id="5" Count="0" />
      <LineId Id="9" Count="0" />
      <LineId Id="11" Count="0" />
      <LineId Id="10" Count="0" />
    </LineIds>
    <LineIds Name="FB_Mover.hasError">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Mover.IdentInGroup.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_Mover.IdentInGroup.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_Mover.isAtPosition">
      <LineId Id="13" Count="0" />
      <LineId Id="16" Count="1" />
      <LineId Id="14" Count="0" />
      <LineId Id="18" Count="1" />
      <LineId Id="22" Count="0" />
      <LineId Id="20" Count="1" />
      <LineId Id="15" Count="0" />
      <LineId Id="7" Count="0" />
    </LineIds>
    <LineIds Name="FB_Mover.isDetected">
      <LineId Id="5" Count="0" />
      <LineId Id="9" Count="2" />
    </LineIds>
    <LineIds Name="FB_Mover.isEnabled">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Mover.isStationary">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Mover.Jerk.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_Mover.Jerk.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_Mover.ModuloToAbs">
      <LineId Id="6" Count="19" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Mover.MoverErrorId.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_Mover.MoverErrorId.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_Mover.MoveTo">
      <LineId Id="53" Count="0" />
      <LineId Id="26" Count="2" />
      <LineId Id="71" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="64" Count="0" />
    </LineIds>
    <LineIds Name="FB_Mover.ResetAxis">
      <LineId Id="20" Count="0" />
      <LineId Id="14" Count="1" />
    </LineIds>
    <LineIds Name="FB_Mover.TrackLength.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_Mover.TrackLength.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_Mover.Zones.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_Mover.Zones.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_Mover.ZoneVelocities.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_Mover.ZoneVelocities.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>