<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="TmsEmbarkStation" Id="{044d9b9f-48a1-452d-b127-28199a3c04bb}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK TmsEmbarkStation EXTENDS Process IMPLEMENTS ITF_SwitchStation
VAR_INPUT
	StateMachine : IPmlStateMachine;
	TmsSwitch : ITF_TmsSwitch;
END_VAR
VAR_OUTPUT
END_VAR
VAR
	DepartMover : ITmsMover;
	StationPosition : INT := 1; //1 is low, 2 is high
	State :(
		Init,                                               
		Ready,                                 
        Waiting,
		Processing,
		Register,
		Boarding,
		BoardingComplete,
		Moving); 
	SwitchPosition: MC_LREAL;
	demandPosition : SwitchState;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[CASE State OF
	Init:
		_Operating := _Clear := _Complete := _Ready := _HasMover := FALSE;
		_Positions[1] := _Positions[2] := _Positions[3] := _Positions[4] := 0;
		NumberOfPositions := 0;
		AssignedPositions := 1;
		StationMovers := 0;
		State := Ready;
	
	Ready:	
		IF StateMachine.GetCurrentState() = E_PMLState.ePMLState_Clearing THEN
			_Operating := _Complete := _HasMover := FALSE;
			_Clear := _Ready := TRUE;
			StationMovers := 0;
			State := Waiting;
		END_IF
	
	Waiting:
		IF _HasMover THEN
			State := Processing;
			_Operating := TRUE;
			_Clear := FALSE;
			_Ready := FALSE;
			_Complete := FALSE;
		END_IF
		
	Processing:
		IF StationPosition = 1 THEN
			IF TmsSwitch.Switch = SwitchState.Down THEN
				IF DepartMover.ActiveTrack = 16#01010790 THEN
					State := Register;
				ELSE
					DepartMover.ActivateTrack(16#01010790);
					State := Register;
				END_IF
				demandPosition := SwitchState.Middle;
			ELSIF TmsSwitch.Switch = SwitchState.Middle THEN
				IF DepartMover.ActiveTrack = 16#010100E0 THEN
					State := Register;
				ELSE
					DepartMover.ActivateTrack(16#010100E0);
					State := Register;
				END_IF
				demandPosition := SwitchState.Up;
			END_IF
		ELSE
			IF TmsSwitch.Switch = SwitchState.Up THEN
				IF DepartMover.ActiveTrack = 16#010100D0 THEN
					State := Register;
				ELSE
					DepartMover.ActivateTrack(16#010100D0);
					State := Register;
				END_IF
				demandPosition := SwitchState.Middle;
			ELSIF TmsSwitch.Switch = SwitchState.Middle THEN
				IF DepartMover.ActiveTrack = 16#010100F0 THEN
					State := Register;
				ELSE
					DepartMover.ActivateTrack(16#010100F0);
					State := Register;
				END_IF
				demandPosition := SwitchState.Down;
			END_IF
		END_IF
		
	Register:
		TmsSwitch.ExchangeMover(Mover := DepartMover, currentStation := THIS^);
		State := Boarding;
	
	Boarding:
		DepartMover.MoveTo(Position := SwitchPosition, Velocity := 100, BackwardMove := FALSE);
		IF DepartMover.isAtPosition(position := SwitchPosition) THEN
			State := BoardingComplete;
		END_IF
		
	BoardingComplete:
		IF TmsSwitch.MoveTo(positionState := demandPosition) THEN
			State := Moving;
		END_IF
		
	Moving:
		IF _Complete THEN
			_Operating := FALSE;
			_Clear := TRUE;
			_Ready := TRUE;
			State := Waiting;
		END_IF		
END_CASE]]></ST>
    </Implementation>
    <Method Name="HasMover" Id="{6096dfca-b0c2-4998-b7bb-2c09860d3176}">
      <Declaration><![CDATA[METHOD HasMover : BOOL
VAR_INPUT
	mover : IMover;
END_VAR
VAR
	iTmsMover : ITmsMover;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF StationMovers <= 2 THEN
	StationMovers := StationMovers + 1;
	IF __QUERYINTERFACE(mover,iTmsMover) THEN
		DepartMover := iTmsMover;
		_HasMover := true;
	END_IF
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="MoverAway" Id="{5d30fab5-165d-4159-bdc5-36df29db049b}">
      <Declaration><![CDATA[METHOD PUBLIC MoverAway : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[StationMovers := StationMovers - 1;
DepartMover := 0;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="SwitchMoveComplete" Id="{b6e4018d-1b11-4436-abf3-c2d1900106a2}">
      <Declaration><![CDATA[METHOD PUBLIC SwitchMoveComplete : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[_Complete := SwitchMoveComplete := true;]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="TmsEmbarkStation">
      <LineId Id="231" Count="11" />
      <LineId Id="336" Count="0" />
      <LineId Id="243" Count="57" />
      <LineId Id="344" Count="1" />
      <LineId Id="301" Count="0" />
      <LineId Id="338" Count="2" />
      <LineId Id="342" Count="1" />
      <LineId Id="302" Count="1" />
      <LineId Id="346" Count="4" />
      <LineId Id="305" Count="0" />
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="TmsEmbarkStation.HasMover">
      <LineId Id="9" Count="3" />
      <LineId Id="20" Count="0" />
      <LineId Id="13" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="TmsEmbarkStation.MoverAway">
      <LineId Id="31" Count="0" />
      <LineId Id="11" Count="0" />
      <LineId Id="8" Count="0" />
    </LineIds>
    <LineIds Name="TmsEmbarkStation.SwitchMoveComplete">
      <LineId Id="5" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>