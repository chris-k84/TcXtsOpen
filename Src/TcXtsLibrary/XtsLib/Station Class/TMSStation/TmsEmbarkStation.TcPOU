<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="TmsEmbarkStation" Id="{044d9b9f-48a1-452d-b127-28199a3c04bb}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK TmsEmbarkStation EXTENDS Process IMPLEMENTS ITF_SwitchStation
VAR_INPUT
	StateMachine : IPmlStateMachine;
	TmsSwitch : ITF_TmsSwitch;
END_VAR
VAR_OUTPUT
END_VAR
VAR
	DepartMover : ITmsMover;
	_stationPosition : INT := 1; //1 is low, 2 is high
	State :(
		Init,                                               
		Ready,                                 
        Waiting,
		HasSwitch,
		Call,
		Processing,
		Boarding,
		BoardingComplete,
		Moving); 
	_switchPosition: MC_LREAL;
	demandPosition : SwitchState;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[CASE State OF
	Init:
		_Operating := _Clear := _Complete := _Ready := _HasMover := FALSE;
		_Positions[1] := _Positions[2] := _Positions[3] := _Positions[4] := 0;
		NumberOfPositions := 0;
		AssignedPositions := 1;
		StationMovers := 0;
		State := Ready;
	
	Ready:	
		IF StateMachine.GetCurrentState() = E_PMLState.ePMLState_Clearing THEN
			_Operating := _Complete := _HasMover := FALSE;
			_Clear := _Ready := TRUE;
			StationMovers := 0;
			State := Waiting;
		END_IF
	
	Waiting:
		IF _HasMover THEN
			State := HasSwitch;
			_Operating := TRUE;
			_Clear := FALSE;
			_Ready := FALSE;
			_Complete := FALSE;
		END_IF
	
	HasSwitch:
		IF (_stationPosition = 1 AND (TmsSwitch.Switch = SwitchState.Down OR TmsSwitch.Switch = SwitchState.Middle))
			OR (_stationPosition = 2 AND (TmsSwitch.Switch = SwitchState.Up OR TmsSwitch.Switch = SwitchState.Middle)) THEN
				IF TmsSwitch.ExchangeMover(Mover := DepartMover, currentStation := THIS^) THEN
					State := Processing;
				END_IF
		ELSE
			State := Call;
		END_IF	
		
	Call:
		IF NOT TmsSwitch.HasMover() AND TmsSwitch.IsStationary() THEN
			IF TmsSwitch.MoveTo(positionState := SwitchState.Middle) THEN
				State := HasSwitch;
			END_IF
		ELSE
			State := Waiting;
		END_IF
	
	Processing:
		IF _stationPosition = 1 THEN
			IF TmsSwitch.Switch = SwitchState.Down THEN
				IF DepartMover.ActiveTrack = 16#01010790 THEN
					State := Boarding;
				ELSE
					DepartMover.ActivateTrack(16#01010790);
					State := Boarding;
				END_IF
				demandPosition := SwitchState.Middle;
			ELSIF TmsSwitch.Switch = SwitchState.Middle THEN
				IF DepartMover.ActiveTrack = 16#010100E0 THEN
					State := Boarding;
				ELSE
					DepartMover.ActivateTrack(16#010100E0);
					State := Boarding;
				END_IF
				demandPosition := SwitchState.Up;
			END_IF
		ELSE
			IF TmsSwitch.Switch = SwitchState.Up THEN
				IF DepartMover.ActiveTrack = 16#010100D0 THEN
					State := Boarding;
				ELSE
					DepartMover.ActivateTrack(16#010100D0);
					State := Boarding;
				END_IF
				demandPosition := SwitchState.Middle;
			ELSIF TmsSwitch.Switch = SwitchState.Middle THEN
				IF DepartMover.ActiveTrack = 16#010100F0 THEN
					State := Boarding;
				ELSE
					DepartMover.ActivateTrack(16#010100F0);
					State := Boarding;
				END_IF
				demandPosition := SwitchState.Down;
			END_IF
		END_IF
		
	Boarding:
		DepartMover.MoveTo(Position := _switchPosition, Velocity := 100, BackwardMove := FALSE);
		IF DepartMover.isAtPosition(position := _switchPosition) THEN
			State := BoardingComplete;
		END_IF
		
	BoardingComplete:
		IF TmsSwitch.MoveTo(positionState := demandPosition) THEN
			State := Moving;
		END_IF
		
	Moving:
		IF _Complete AND NOT _HasMover THEN
			_Operating := FALSE;
			_Clear := TRUE;
			_Ready := TRUE;
			State := Waiting;
		END_IF		
END_CASE]]></ST>
    </Implementation>
    <Method Name="HasMover" Id="{6096dfca-b0c2-4998-b7bb-2c09860d3176}">
      <Declaration><![CDATA[METHOD HasMover : BOOL
VAR_INPUT
	mover : IMover;
END_VAR
VAR
	iTmsMover : ITmsMover;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF StationMovers <= 2 THEN
	StationMovers := StationMovers + 1;
	IF __QUERYINTERFACE(mover,iTmsMover) THEN
		DepartMover := iTmsMover;
		_HasMover := true;
	END_IF
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="MoverAway" Id="{5d30fab5-165d-4159-bdc5-36df29db049b}">
      <Declaration><![CDATA[METHOD PUBLIC MoverAway : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[StationMovers := StationMovers - 1;
IF StationMovers = 0 THEN
	_HasMover := FALSE;
END_IF
DepartMover := 0;
]]></ST>
      </Implementation>
    </Method>
    <Property Name="StationPosition" Id="{04b01043-8abc-480b-b7a1-3b47b2f6b3d3}">
      <Declaration><![CDATA[PROPERTY StationPosition : INT
]]></Declaration>
      <Get Name="Get" Id="{63f29fcb-9246-41b7-8237-0e14a4d877b8}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[StationPosition := _stationPosition;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{8dad77b7-b3d3-4e11-af0a-1ace0eb16549}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[_stationPosition := StationPosition;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Method Name="SwitchMoveComplete" Id="{b6e4018d-1b11-4436-abf3-c2d1900106a2}">
      <Declaration><![CDATA[METHOD PUBLIC SwitchMoveComplete : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[_Complete := SwitchMoveComplete := true;]]></ST>
      </Implementation>
    </Method>
    <Property Name="SwitchPosition" Id="{77eb7d82-50db-4968-86fb-d2f009644fbf}">
      <Declaration><![CDATA[PROPERTY SwitchPosition : mc_lreal
]]></Declaration>
      <Get Name="Get" Id="{5e9136b4-3bc6-41b5-a233-22f210e01c6b}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[SwitchPosition := _switchPosition;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{58d1b30d-be8b-4b08-b209-84e887ca28ad}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[_switchPosition := SwitchPosition;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <LineIds Name="TmsEmbarkStation">
      <LineId Id="504" Count="24" />
      <LineId Id="638" Count="1" />
      <LineId Id="643" Count="0" />
      <LineId Id="684" Count="0" />
      <LineId Id="680" Count="1" />
      <LineId Id="659" Count="0" />
      <LineId Id="685" Count="1" />
      <LineId Id="640" Count="0" />
      <LineId Id="687" Count="0" />
      <LineId Id="702" Count="0" />
      <LineId Id="690" Count="0" />
      <LineId Id="695" Count="1" />
      <LineId Id="693" Count="0" />
      <LineId Id="697" Count="1" />
      <LineId Id="692" Count="0" />
      <LineId Id="642" Count="0" />
      <LineId Id="530" Count="38" />
      <LineId Id="573" Count="17" />
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="TmsEmbarkStation.HasMover">
      <LineId Id="9" Count="3" />
      <LineId Id="20" Count="0" />
      <LineId Id="13" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="TmsEmbarkStation.MoverAway">
      <LineId Id="31" Count="0" />
      <LineId Id="35" Count="2" />
      <LineId Id="11" Count="0" />
      <LineId Id="8" Count="0" />
    </LineIds>
    <LineIds Name="TmsEmbarkStation.StationPosition.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="TmsEmbarkStation.StationPosition.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="TmsEmbarkStation.SwitchMoveComplete">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="TmsEmbarkStation.SwitchPosition.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="TmsEmbarkStation.SwitchPosition.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>