<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="XtsEnableSequence" Id="{b3bae6c3-ef72-4837-b4e0-3c1e6cb08595}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK XtsEnableSequence IMPLEMENTS ITask
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR
VAR
	_collisionGroup : ICollisionGroup;
	addMover : AddMoverToGroupTask(_collisionGroup);
	moverNumbers : DINT;
	AllMoversEnabled: BOOL;
	EnableTrigger : BOOL;	
	Logger : TcMessage_Ext;
	State : INT;
	_busy : BOOL;
	_done : BOOL;
	_Error : BOOL;
	arrMovers : ARRAY[1..SystemParameters.NumberOfMovers] OF IMover;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[CASE State OF
	0:
		IF EnableTrigger THEN
			State := 10;
			EnableTrigger := FALSE;
			moverNumbers := 1;
			_busy := TRUE;
			_done := FALSE;
			_Error := FALSE;
		END_IF
		
	10:
		FOR moverNumbers := LOWER_BOUND(arrMovers,1) TO UPPER_BOUND(arrMovers,1) DO
			arrMovers[moverNumbers].ResetAxis();
		END_FOR
		moverNumbers := 1;
		State := 20;
		
	20:
		IF _collisionGroup.GroupState = CAGroupStatus.mcGroupStateErrorStop THEN
			_collisionGroup.Reset();
			Logger.Send(TC_EVENTS.XtsCAGroupEvents.CAGroupReset,'');
		END_IF
		State := 30;
		
	30:
		arrMovers[moverNumbers].IdentInGroup := DINT_TO_INT( moverNumbers);
		addMover.AddMover(MoverToAdd := arrMovers[moverNumbers]);
		logger.Send(TC_EVENTS.XtsCAGroupEvents.AddingMoverToGroup,DINT_TO_STRING(moverNumbers));
		State := 40;
		
	40:
		IF addMover.Done THEN
			IF moverNumbers <> UPPER_BOUND(arrMovers,1) THEN
				moverNumbers := moverNumbers + 1;
				State := 30;
			ELSE
				logger.Send(TC_EVENTS.XtsCAGroupEvents.AllMoversAdded,'');
				FOR moverNumbers := LOWER_BOUND(arrMovers,1) TO UPPER_BOUND(arrMovers,1) DO
					arrMovers[moverNumbers].EnableAxis();
				END_FOR
				State := 50;
			END_IF
		END_IF
		
	50:
		AllMoversEnabled := TRUE;
		FOR moverNumbers := LOWER_BOUND(arrMovers,1) TO UPPER_BOUND(arrMovers,1) DO
			AllMoversEnabled := TRUE AND arrMovers[moverNumbers].isEnabled();
		END_FOR
		IF AllMoversEnabled THEN
			logger.Send(TC_EVENTS.XtsCAGroupEvents.AllMoversEnabled,'');
			_collisionGroup.Enable();
			logger.Send(TC_EVENTS.XtsCAGroupEvents.CAGroupEnable,'');
			State := 60;
		END_IF
		
	60:
		IF _collisionGroup.GroupState = 2 THEN
			State := 0;
			_busy := FALSE;
			_done := true;
		END_IF
END_CASE

addMover.Cycle();]]></ST>
    </Implementation>
    <Method Name="Abort" Id="{cafb98cb-e0e4-409c-b6f8-122c787fc07d}">
      <Declaration><![CDATA[METHOD Abort : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[EnableTrigger := FALSE;
State := 0;
addMover.Abort();]]></ST>
      </Implementation>
    </Method>
    <Property Name="Busy" Id="{46653790-8548-49c2-8cf9-461f616a7413}">
      <Declaration><![CDATA[PROPERTY Busy : BOOL]]></Declaration>
      <Get Name="Get" Id="{2914fa43-f085-4d43-9500-5b40f3cbed00}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Busy := _busy;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="Done" Id="{3d3bebc9-a410-4875-8a42-cd9e32cd3fab}">
      <Declaration><![CDATA[PROPERTY Done : BOOL]]></Declaration>
      <Get Name="Get" Id="{37ccb39e-1d6a-4c57-8922-2c7d24188f37}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Done := _done;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="Enable" Id="{1d42943b-c792-49a8-a140-4271fe755723}">
      <Declaration><![CDATA[METHOD Enable : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT _busy THEN
	EnableTrigger := Enable := true;
END_IF
]]></ST>
      </Implementation>
    </Method>
    <Property Name="Error" Id="{301d19ed-98b9-48e7-887b-89163b0ce3ad}">
      <Declaration><![CDATA[PROPERTY Error : BOOL]]></Declaration>
      <Get Name="Get" Id="{4cbf8de7-2404-46d3-8c55-b82ac3a79fd9}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Error := _Error;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="FB_init" Id="{a774c049-4849-459f-b124-c9b64376f790}">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
	collisionGroup : ICollisionGroup;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[_collisionGroup := collisionGroup;
addMover.FB_init(FALSE, FALSE, collisionGroup);]]></ST>
      </Implementation>
    </Method>
    <Property Name="MoverArray" Id="{721d6d6b-875a-4a57-a2d0-d8ba93345f31}">
      <Declaration><![CDATA[PROPERTY MoverArray : array[1..SystemParameters.NumberOfMovers] of IMover]]></Declaration>
      <Get Name="Get" Id="{debe1308-08c5-4598-b2b7-2f14aad87b57}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[MoverArray := arrMovers;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{c7c4fe9e-ad80-493f-b820-7efd179d6444}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[arrMovers := MoverArray;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <LineIds Name="XtsEnableSequence">
      <LineId Id="138" Count="5" />
      <LineId Id="291" Count="1" />
      <LineId Id="290" Count="0" />
      <LineId Id="145" Count="0" />
      <LineId Id="218" Count="1" />
      <LineId Id="221" Count="0" />
      <LineId Id="223" Count="0" />
      <LineId Id="220" Count="0" />
      <LineId Id="243" Count="0" />
      <LineId Id="225" Count="0" />
      <LineId Id="317" Count="3" />
      <LineId Id="369" Count="0" />
      <LineId Id="321" Count="1" />
      <LineId Id="146" Count="3" />
      <LineId Id="344" Count="0" />
      <LineId Id="150" Count="7" />
      <LineId Id="345" Count="0" />
      <LineId Id="244" Count="1" />
      <LineId Id="158" Count="0" />
      <LineId Id="246" Count="0" />
      <LineId Id="159" Count="1" />
      <LineId Id="206" Count="0" />
      <LineId Id="211" Count="0" />
      <LineId Id="169" Count="4" />
      <LineId Id="346" Count="0" />
      <LineId Id="247" Count="0" />
      <LineId Id="368" Count="0" />
      <LineId Id="174" Count="3" />
      <LineId Id="182" Count="1" />
      <LineId Id="296" Count="1" />
      <LineId Id="185" Count="3" />
    </LineIds>
    <LineIds Name="XtsEnableSequence.Abort">
      <LineId Id="5" Count="2" />
    </LineIds>
    <LineIds Name="XtsEnableSequence.Busy.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="XtsEnableSequence.Done.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="XtsEnableSequence.Enable">
      <LineId Id="9" Count="2" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="XtsEnableSequence.Error.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="XtsEnableSequence.FB_init">
      <LineId Id="7" Count="0" />
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="XtsEnableSequence.MoverArray.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="XtsEnableSequence.MoverArray.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>