<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="DisableGroup" Id="{2efb7482-2869-4c33-92cf-4ab1172a1cdc}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'hide_all_locals'}
FUNCTION_BLOCK DisableGroup EXTENDS TaskBase
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR
VAR
	groupDisable			: MC_GroupDisable;
	_caGroup			: ICollisionGroup;
	_disableGroup : BOOL;
	Logger : TcMessage_Ext;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="Abort" Id="{3e18b1e4-3090-4bb5-ab59-aa6e4e12c0ef}">
      <Declaration><![CDATA[METHOD Abort : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[State := 0;
groupDisable.Execute := FALSE;
Abort := true;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Cycle" Id="{9c133c94-c3ff-49e8-9819-2dfd126960ef}">
      <Declaration><![CDATA[METHOD Cycle : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[CASE State OF
	0:
		IF _disableGroup THEN
			_done := FALSE;
			_error := FALSE;
			_busy := TRUE;
			groupDisable.Execute := TRUE;
			IF groupDisable.Busy THEN
				_disableGroup := FALSE;
				State := 10;
				logger.Send(TC_EVENTS.XtsCAGroupEvents.CAGroupDisabling,'');
			END_IF
		END_IF
	
	10:
		IF NOT groupDisable.Busy THEN
			IF groupDisable.Done THEN
				_done := TRUE;
				logger.Send(TC_EVENTS.XtsCAGroupEvents.CAGroupDisabled,'');
			ELSIF groupDisable.Error THEN
				_error := TRUE;
				logger.Send(TC_EVENTS.XtsCAGroupEvents.CAGroupDisableError,'');
			END_IF
			_busy := FALSE;
			groupDisable.Execute := false;
			State := 0;
		END_IF
END_CASE


groupDisable(AxesGroup := _caGroup.GroupRef);]]></ST>
      </Implementation>
    </Method>
    <Method Name="Execute" Id="{75a1aef5-6794-4797-8c10-1d2b68a1a592}">
      <Declaration><![CDATA[METHOD Execute : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Execute := _disableGroup := TRUE;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{e1d9a681-04bb-4f12-84b2-adf3edd36752}">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
	CAGroup : ICollisionGroup;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[_caGroup := CAGroup;]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="DisableGroup">
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="DisableGroup.Abort">
      <LineId Id="4" Count="2" />
    </LineIds>
    <LineIds Name="DisableGroup.Cycle">
      <LineId Id="6" Count="29" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="DisableGroup.Execute">
      <LineId Id="5" Count="1" />
    </LineIds>
    <LineIds Name="DisableGroup.FB_init">
      <LineId Id="7" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>