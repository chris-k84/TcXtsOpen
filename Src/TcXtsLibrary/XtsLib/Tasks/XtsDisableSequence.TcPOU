<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="XtsDisableSequence" Id="{73e2f204-8f47-4c35-9b5f-a5e50b2f6f82}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK XtsDisableSequence IMPLEMENTS ITask
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR
VAR
	_collisionGroup : ICollisionGroup;
	removeAllAxes : RemoveAllMoverFromGroup(_collisionGroup);
	grpStop : StopMoverGroup(_collisionGroup);
	State : INT;
	DisableTrigger: BOOL;
	moverNumbers : DINT := 1;
	AllMoversDisabled: BOOL;
	_busy : BOOL;
	_done : BOOL;
	_Error : BOOL;
	i: DINT;
	
	Logger : TcMessage_Ext;
END_VAR
VAR_IN_OUT
	arrMovers : ARRAY[*] OF IMover;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[CASE State OF
	0:
		IF DisableTrigger THEN
			DisableTrigger := FALSE;
			_busy := TRUE;
			_done := FALSE;
			_Error := FALSE;
			IF _collisionGroup.GroupState = CAGroupStatus.mcGroupStateMoving THEN
				Logger.Send(TC_EVENTS.XtsCAGroupEvents.CAGroupStop,'');
				grpStop.Execute();
				State := 10;
			ELSE
				State := 20;
				removeAllAxes.RemoveAllMover();
				Logger.Send(TC_EVENTS.XtsCAGroupEvents.CaGroupRemoveMovers,'');
			END_IF
		END_IF
		
	10:
		IF grpStop.Done THEN
			State := 20;
			Logger.Send(TC_EVENTS.XtsCAGroupEvents.CaGroupRemoveMovers,'');
			removeAllAxes.RemoveAllMover();
		END_IF
	
	20:
		IF removeAllAxes.Done THEN
			FOR moverNumbers := LOWER_BOUND(arrMovers,1) TO UPPER_BOUND(arrMovers,1) DO
				arrMovers[moverNumbers].IdentInGroup := 0;
				arrMovers[moverNumbers].DisableAxis();
			END_FOR
			State := 30;
		END_IF
		
	30:
		AllMoversDisabled := TRUE;
		FOR moverNumbers := LOWER_BOUND(arrMovers,1) TO UPPER_BOUND(arrMovers,1) DO
			AllMoversDisabled := TRUE AND NOT arrMovers[moverNumbers].isEnabled();
		END_FOR
		IF AllMoversDisabled THEN
			logger.Send(TC_EVENTS.XtsCAGroupEvents.AllMoversDisabled,'');
			State := 50;
			_collisionGroup.Disable();
			logger.Send(TC_EVENTS.XtsCAGroupEvents.CAGroupDisable,'');
		END_IF
		
	50:
		IF _collisionGroup.GroupState = 1 THEN
			State := 0;
			grpStop.Deceleration := Tc3_Mc3Definitions.MC_DEFAULT;
			grpStop.Jerk := Tc3_Mc3Definitions.MC_DEFAULT;
			
			_busy := FALSE;
			_done := true;
		END_IF
END_CASE

removeAllAxes();
grpStop();]]></ST>
    </Implementation>
    <Method Name="Abort" Id="{afd537cd-f397-4f71-a0b8-6dd2d52942e4}">
      <Declaration><![CDATA[METHOD Abort : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[DisableTrigger := FALSE;
State := 0;
removeAllAxes.Abort();
grpStop.Abort();]]></ST>
      </Implementation>
    </Method>
    <Property Name="Busy" Id="{fc07d329-127f-40be-b9dd-9f15379f97c1}">
      <Declaration><![CDATA[PROPERTY Busy : BOOL
]]></Declaration>
      <Get Name="Get" Id="{9dd46cfd-26e2-4b1d-9cfd-59dc125dbe84}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Busy := _busy;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="Disable" Id="{d8277baf-d0a5-4ca3-b9d2-183e530222af}">
      <Declaration><![CDATA[METHOD Disable : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[DisableTrigger := true;]]></ST>
      </Implementation>
    </Method>
    <Property Name="Done" Id="{efc20aa9-c110-4223-9726-36ce2db4f287}">
      <Declaration><![CDATA[PROPERTY Done : BOOL
]]></Declaration>
      <Get Name="Get" Id="{c2112fc9-a6f8-4cc4-b638-2d26ce808170}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Done := _done;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="Error" Id="{19dd2892-ce5c-4277-bdea-9eefed81895d}">
      <Declaration><![CDATA[PROPERTY Error : BOOL
]]></Declaration>
      <Get Name="Get" Id="{286361e3-d2d3-4160-b40e-98196d8fec86}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Error := _Error;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="FB_init" Id="{2df29c4c-50b6-4b7a-96ef-c07bbbce5982}">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
	collisionGroup : ICollisionGroup;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[_collisionGroup := collisionGroup;
removeAllAxes.FB_init(FALSE, FALSE, CAGroup := collisionGroup);
grpStop.FB_init(FALSE,FALSE,CAGroup := collisionGroup);]]></ST>
      </Implementation>
    </Method>
    <Method Name="SetEmergencyDynamics" Id="{62e6980a-ad39-4f6d-bfa3-13e514d9c054}">
      <Declaration><![CDATA[METHOD SetEmergencyDynamics : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[grpStop.Deceleration := Tc3_Mc3Definitions.MC_MAXIMUM;
grpStop.Jerk := Tc3_Mc3Definitions.MC_MAXIMUM;]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="XtsDisableSequence">
      <LineId Id="3" Count="3" />
      <LineId Id="8" Count="3" />
      <LineId Id="80" Count="0" />
      <LineId Id="12" Count="4" />
      <LineId Id="110" Count="0" />
      <LineId Id="17" Count="5" />
      <LineId Id="83" Count="0" />
      <LineId Id="23" Count="6" />
      <LineId Id="134" Count="0" />
      <LineId Id="30" Count="9" />
      <LineId Id="86" Count="0" />
      <LineId Id="40" Count="1" />
      <LineId Id="111" Count="0" />
      <LineId Id="42" Count="4" />
      <LineId Id="48" Count="1" />
      <LineId Id="87" Count="0" />
      <LineId Id="50" Count="3" />
      <LineId Id="55" Count="1" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="XtsDisableSequence.Abort">
      <LineId Id="3" Count="1" />
      <LineId Id="6" Count="0" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="XtsDisableSequence.Busy.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="XtsDisableSequence.Disable">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="XtsDisableSequence.Done.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="XtsDisableSequence.Error.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="XtsDisableSequence.FB_init">
      <LineId Id="3" Count="0" />
      <LineId Id="7" Count="1" />
    </LineIds>
    <LineIds Name="XtsDisableSequence.SetEmergencyDynamics">
      <LineId Id="3" Count="1" />
    </LineIds>
  </POU>
</TcPlcObject>