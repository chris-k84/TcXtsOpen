<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="MoveModuloMoverToPosition" Id="{996fe608-f005-43b0-b7bb-f33f237511c5}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK MoveModuloMoverToPosition EXTENDS TaskBase
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR
VAR
	moveAbs	: MC_MoveAbsoluteCA;
	_axis : REFERENCE TO AXIS_REF;
	_MoveMover : BOOL;
	_stOptions : ST_MoveAbsoluteCAOptions;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[CASE State OF
	0:
		IF _MoveMover THEN
			_done := FALSE;
			_error := FALSE;
			_busy := TRUE;
			moveAbs.Execute := TRUE;
			IF moveAbs.Busy THEN
				State := 10;
				_MoveMover := FALSE;
			END_IF
		END_IF
		
	10:
		IF NOT moveAbs.Busy THEN
			IF moveAbs.Done THEN
				_done := TRUE;
			ELSIF moveAbs.Error THEN
				_error := TRUE;
			END_IF
			_busy := FALSE;
			moveAbs.Execute := FALSE;
			State := 0;
		END_IF
END_CASE

moveAbs(Axis := _axis, Options := _stOptions);]]></ST>
    </Implementation>
    <Method Name="Abort" Id="{e91f53d6-3fee-47da-b969-b12290444a1f}">
      <Declaration><![CDATA[METHOD Abort : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[moveAbs.Execute := FALSE;
moveAbs.Position := moveAbs.Velocity := 0;
_MoveMover := false;
_busy := false;
Abort := true;
State := 0;]]></ST>
      </Implementation>
    </Method>
    <Property Name="Acceleration" Id="{9cca71bc-09f7-4ec5-a9e0-372ce880866d}">
      <Declaration><![CDATA[PROPERTY PUBLIC Acceleration : mc_lreal]]></Declaration>
      <Get Name="Get" Id="{8efab319-7a15-4b02-96d3-afb30733e7b6}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Acceleration := moveAbs.Acceleration;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{7f6e5164-788c-42d5-9777-9034d8aee40a}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[moveAbs.Acceleration := Acceleration;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Property Name="Deceleration" Id="{844ebaf1-91dd-4442-8c33-92bcbeac6dea}">
      <Declaration><![CDATA[PROPERTY PUBLIC Deceleration : mc_lreal]]></Declaration>
      <Get Name="Get" Id="{50b8d5dc-c5e8-49f1-8033-680b16568e17}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Deceleration := moveAbs.Deceleration;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{c1fd28c1-52e9-40a5-a51c-7d8bad271f43}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[moveAbs.Deceleration := Deceleration;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Method Name="FB_init" Id="{37d409ee-dd67-4ea2-bddf-a65d46cc40e5}">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
	axis : reference TO AXIS_REF;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[_axis REF= axis;
]]></ST>
      </Implementation>
    </Method>
    <Property Name="Gap" Id="{1f9f5e65-07fb-4eac-aedb-feef80486e30}">
      <Declaration><![CDATA[PROPERTY PUBLIC Gap : mc_lreal]]></Declaration>
      <Get Name="Get" Id="{67ac09b0-11e2-4124-826d-72346d915abb}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Gap := moveAbs.Gap;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{62c5bf39-3859-4737-8183-2c2206b5176d}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[moveAbs.Gap := Gap;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Property Name="Jerk" Id="{cce85ebc-6201-45ef-a6f2-00296f696976}">
      <Declaration><![CDATA[PROPERTY PUBLIC Jerk : mc_lreal]]></Declaration>
      <Get Name="Get" Id="{9dd7b014-e337-43e8-be50-6abb225db838}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Jerk := moveAbs.Jerk;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{dcb14394-7c86-41b4-80fe-e9c7416faef5}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[moveAbs.Jerk := Jerk;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Method Name="MoveTo" Id="{457265c4-5c25-4ff8-a5c9-719e58c0811a}">
      <Declaration><![CDATA[METHOD MoveTo : BOOL
VAR_INPUT
	Position : MC_LREAL;
	Velocity : MC_LREAL;
	Direction: Tc3_Mc3Definitions.MC_DIRECTION;
	Turns: UDINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[moveAbs.Position := Position;
moveAbs.Velocity := Velocity;
moveAbs.Direction := Direction;
moveAbs.Options.AdditionalTurns := Turns;
_MoveMover := MoveTo := true;]]></ST>
      </Implementation>
    </Method>
    <Property Name="Options" Id="{c95271b4-8041-4fcf-9fb6-4915363c060f}">
      <Declaration><![CDATA[PROPERTY PUBLIC Options : ST_MoveAbsoluteCAOptions]]></Declaration>
      <Get Name="Get" Id="{965704cd-ef53-4074-a532-01335413067a}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Options := _stOptions;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{64fce6aa-8064-4054-b02a-ac33ceea4a73}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[_stOptions := Options;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <LineIds Name="MoveModuloMoverToPosition">
      <LineId Id="57" Count="5" />
      <LineId Id="99" Count="3" />
      <LineId Id="64" Count="1" />
      <LineId Id="118" Count="0" />
      <LineId Id="103" Count="0" />
      <LineId Id="72" Count="10" />
      <LineId Id="84" Count="0" />
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="MoveModuloMoverToPosition.Abort">
      <LineId Id="5" Count="0" />
      <LineId Id="8" Count="0" />
      <LineId Id="12" Count="0" />
      <LineId Id="10" Count="0" />
      <LineId Id="6" Count="0" />
      <LineId Id="4" Count="0" />
    </LineIds>
    <LineIds Name="MoveModuloMoverToPosition.Acceleration.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="MoveModuloMoverToPosition.Acceleration.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="MoveModuloMoverToPosition.Deceleration.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="MoveModuloMoverToPosition.Deceleration.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="MoveModuloMoverToPosition.FB_init">
      <LineId Id="7" Count="0" />
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="MoveModuloMoverToPosition.Gap.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="MoveModuloMoverToPosition.Gap.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="MoveModuloMoverToPosition.Jerk.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="MoveModuloMoverToPosition.Jerk.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="MoveModuloMoverToPosition.MoveTo">
      <LineId Id="4" Count="0" />
      <LineId Id="10" Count="0" />
      <LineId Id="17" Count="1" />
      <LineId Id="11" Count="0" />
    </LineIds>
    <LineIds Name="MoveModuloMoverToPosition.Options.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="MoveModuloMoverToPosition.Options.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>