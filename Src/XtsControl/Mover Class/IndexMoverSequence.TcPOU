<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.9">
  <POU Name="IndexMoverSequence" Id="{5b1293cd-307b-4dc9-8f5e-57c564c1904c}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK IndexMoverSequence
VAR_INPUT
	ThisMover : IMover;
	XtsTrack : IXtsTrack;
	StateMachine : IPmlStateMachine;
END_VAR
VAR_OUTPUT
END_VAR
VAR
	State :(
        Init,                                               
        Available,
		MovingToStart, 
		AtStart,                                 
        MovingToStation,
		QueuedAtStation,
		AtStation);  
	CurrentStation : INT := 1;
END_VAR
VAR_IN_OUT
	StationArray : ARRAY[*] OF IStation;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[CASE State OF
	Init:
		IF ThisMover.isDetected() THEN
			State := Available;
		END_IF
		
	Available:
		IF StateMachine.getState() = E_PMLState.ePMLState_Starting THEN
			State := MovingToStart;
		END_IF
		
	MovingToStart:
		IF ThisMover.isAtPosition(position := 1000.0) THEN
			State := AtStart;
		END_IF
			
	AtStart:
		IF StationArray[CurrentStation].IsReady() THEN
			IF ThisMover.MoveTo(Position := StationArray[CurrentStation].Position,
								Velocity := 1000,
								BackwardMove := FALSE) THEN
				State :=  MovingToStation;
			END_IF
		END_IF
		
	MovingToStation:
		IF ThisMover.isStationary() THEN 
			IF ThisMover.isAtPosition(StationArray[CurrentStation].Position) THEN
				State := AtStation;
			ELSE
				State := QueuedAtStation;
			END_IF
		END_IF
		
	QueuedAtStation:
		IF ThisMover.isAtPosition(StationArray[CurrentStation].Position) THEN
				State := AtStation;
		END_IF

	AtStation:
		IF StationArray[CurrentStation].isComplete() THEN
			IF CurrentStation = UPPER_BOUND(StationArray,1) THEN
				IF ThisMover.MoveTo(Position := 1000.0,
								Velocity := 1000,
								BackwardMove := FALSE) THEN
					State := MovingToStart;
				END_IF
			ELSE
				IF ThisMover.MoveTo(Position := StationArray[CurrentStation + 1].Position,
								Velocity := 1000,
								BackwardMove := FALSE) THEN
					CurrentStation := CurrentStation + 1;
					State := MovingToStation;
				END_IF
			END_IF
		END_IF

END_CASE]]></ST>
    </Implementation>
    <LineIds Name="IndexMoverSequence">
      <LineId Id="9" Count="0" />
      <LineId Id="38" Count="0" />
      <LineId Id="158" Count="2" />
      <LineId Id="132" Count="0" />
      <LineId Id="41" Count="0" />
      <LineId Id="171" Count="0" />
      <LineId Id="175" Count="0" />
      <LineId Id="170" Count="0" />
      <LineId Id="182" Count="2" />
      <LineId Id="207" Count="1" />
      <LineId Id="176" Count="0" />
      <LineId Id="163" Count="0" />
      <LineId Id="180" Count="1" />
      <LineId Id="209" Count="2" />
      <LineId Id="256" Count="0" />
      <LineId Id="161" Count="1" />
      <LineId Id="67" Count="0" />
      <LineId Id="85" Count="0" />
      <LineId Id="214" Count="0" />
      <LineId Id="212" Count="0" />
      <LineId Id="215" Count="2" />
      <LineId Id="213" Count="0" />
      <LineId Id="86" Count="0" />
      <LineId Id="68" Count="0" />
      <LineId Id="84" Count="0" />
      <LineId Id="233" Count="0" />
      <LineId Id="219" Count="0" />
      <LineId Id="87" Count="0" />
      <LineId Id="69" Count="0" />
      <LineId Id="83" Count="0" />
      <LineId Id="220" Count="0" />
      <LineId Id="225" Count="1" />
      <LineId Id="224" Count="0" />
      <LineId Id="222" Count="0" />
      <LineId Id="258" Count="0" />
      <LineId Id="227" Count="0" />
      <LineId Id="230" Count="2" />
      <LineId Id="261" Count="0" />
      <LineId Id="229" Count="0" />
      <LineId Id="260" Count="0" />
      <LineId Id="223" Count="0" />
      <LineId Id="221" Count="0" />
      <LineId Id="88" Count="0" />
      <LineId Id="39" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>